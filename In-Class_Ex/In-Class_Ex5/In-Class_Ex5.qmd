---
title: "In-Class_Ex05"
execute:  
  warning: false
date: "`r Sys.Date()`" 
---

## Getting Started:

```{r}
pacman::p_load(sf, sfdep, tmap, tidyverse)
```

## The Data:

There are 2 data sets in this use case, they are:

-   Hunan, a geospatial dat set in ESRI shapefile format, and

-   Hunan_2012, an attribute data set in csv format

```{r}
hunan <- st_read(dsn = "data/geospatial", 
                 layer = "Hunan")
```

```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

\*\* this is to remain the geometry data in a sf format \*\*

```{r}
hunan_GDPPC <- left_join(hunan, hunan2012) %>%
               dplyr::select(1:4, 7, 15)

```

## Plotting a choropleth map

```{r}
tmap_mode("plot")
tm_shape(hunan_GDPPC)+
  tm_fill("GDPPC",
          style = "quantile",
          palette = "Blues", 
          title = "GDPPC")+
  tm_layout(main.title = "Distribution of GDP per capita by county/ Hunan Province",
            main.title.position = "Center",
            main.title.size = 0.73,
            legend.height = 0.45, 
            legend.width = 0.35, 
            frame = TRUE) + 
  tm_borders(alpha = 0.5)+
  tm_compass(type="8star", size = 2) + 
  tm_scale_bar() + 
  tm_grid(alpha=0.2)
```

## Deriving continguity weights: Queen's method

save it into a column and table name: nb and wt

combine the 2 codes into 1

In the code chuck below, queen method is ised to derive the contiguity weights:

```{r}
wm_q <- hunan_GDPPC %>% 
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb,
                       style = "W"),
         .before =1)
```

nb = will show the neighbours of the particular county

## Computing Global Moran'I

in the code chuck below, global_moral() function is used to compute the Moran's I value: Different from spdep package, the output is a tibble data.frame.

```{r}
moranI <- global_moran(wm_q$GDPPC,
                       wm_q$nb,
                       wm_q$wt)

glimpse(moranI)
```

## Performing Global Moran'I permutation test

In practice, monte- carlo simulation should be used to perform the statistical test.

It is always a good practice to use set.seed() before performing simulation. This is to ensure that the computation is reproducible.

(reduce the nsim to 49 if the computation time is very long, it will be good for simulation as well)

```{r}
set.seed(1234)
global_moran_perm(wm_q$GDPPC,
                    wm_q$nb, 
                    wm_q$wt,
                  nsim =99 )

```

The statistical report above show that the p-value is smaller than alpha value of 0.05. Hence, we have enough statistical evidence to reject the null hypothesis that the spatial distribution of GPD per capita are resemble random distribution (i.e. independent from spatial). Because the Moran's I statistics is greater than O. We can infer that the spatial distribution shows sign of clustering.

\*\* The number of simulation is always equal to nsim +1. This mean in nsim =99. This mean 100 simulation will be performed. \*\*
