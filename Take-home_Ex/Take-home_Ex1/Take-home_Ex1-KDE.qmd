---
title: "Take-home_Ex1"
date: "`r Sys.Date()`" 
format: html
execute:
  eval: true
  echo: true
  freeze: true
  warning: false
  message: false
editor: visual
---

# Getting Started

```{r}
pacman::p_load(arrow, lubridate, tidyverse,
               sf, spNetwork, 
               raster, spatstat, tmap)
```

## 1. Loading of Data

### 1.3 Loading of Master Plan 2019 Subzone Boundary (No Sea) from Data.gov.sg

```{r}
mpsz <- st_read(dsn = "data/MPSZ-2019", 
                layer = "MPSZ-2019")
```

```{r}
mpsz3414 <- st_transform(mpsz, 3414)
```

## 2. Extracting Geospatial Data Layer

```{r}
sf_grab_origin_data <- read_rds("data/rds/sf_grab_origin_data.rds")
```

```{r}
summary(sf_grab_origin_data)
```

```{r}
tmap_mode('plot')
tm_shape(sf_grab_origin_data)+
  tm_dots()
```

### 2.2 Extracting Road Layer within Singapore excluding outer islands

```{r}
sf_roads_in_sg <- read_rds("data/rds/sf_roads_in_sg.rds")
```

### 2.3 Extracting Singapore boundary layer excluding outer islands

```{r}
outer_islands <- mpsz3414[grep("island", mpsz3414$PLN_AREA_N, ignore.case = TRUE), ]
print(outer_islands)
```

```{r}
merged_map <- st_union(mpsz3414, outer_islands)
```

```{r}
map_without_outer_islands <- st_difference(mpsz3414, st_union(outer_islands))
```

```{r}
sf_map_without_outer_islands <- st_cast(map_without_outer_islands, "POLYGON")
```

## 3. Traditional Kernel Density Estimation layers

To reduce the data size and focus on one specific area, I will be doing the analysis on Punggol town.

### 3.1 Creating Sg_boundary owin object

```{r}
sg_sf <- sf_map_without_outer_islands %>% 
  st_union()
```

```{r}
#| eval: false
plot(sg_sf)
```

```{r}
grab_origin_ppp <- as.ppp(sf_grab_origin_data)
```

```{r}
summary(grab_origin_ppp)
```

```{r}
#| eval: false
plot(grab_origin_ppp)
```

```{r}
summary(grab_origin_ppp)
```

```{r}
sg_owin <- as.owin(sg_sf) 
summary(sg_owin)
```

```{r}
sg_grab_origin_ppp = grab_origin_ppp[sg_owin]
summary(sg_grab_origin_ppp)
```

```{r}
#| eval: false
plot(sg_grab_origin_ppp)
```

```{r}
kde_grab_bw <- density(sg_grab_origin_ppp,
                              sigma=bw.diggle,
                              edge=TRUE,
                            kernel="gaussian") 

```

```{r}
plot(kde_grab_bw)
```

## 4. Network Kernel Density Estimation (NKDE) or Temporal Network Kernel Density Estimation (TNKDE)

```{r}
pg <- mpsz3414 %>%
  filter(PLN_AREA_N == "PUNGGOL")

```

```{r}
plot(st_geometry(pg, main = "Punggol"))
```

```{r}
#| eval: False
roads_in_punggol <- st_intersection(sf_roads_in_sg, pg)
```

```{r}
#| eval: False
write_rds(roads_in_punggol, "data/rds/roads_in_punggol.rds")
```

```{r}
roads_in_punggol <- read_rds("data/rds/roads_in_punggol.rds")
```

```{r}
plot(st_geometry(roads_in_punggol))
```

```{r}
#| eval: False
grab_in_punggol <- st_intersection(sf_grab_origin_data, pg)

```

```{r}
#| eval: False
write_rds(grab_in_punggol, "data/rds/grab_in_punggol.rds")

```

```{r}
grab_in_punggol <- read_rds("data/rds/grab_in_punggol.rds")
```

```{r}
plot(st_geometry(grab_in_punggol))
```

```{r}
#grab_road_in_pg <- st_intersection(sf_roads_in_sg,grab_in_punggol)
```

```{r}
#grab_road_in_pg <- st_intersection(grab_in_punggol, roads_in_punggol)
```

```{r}
#plot(grab_road_in_pg)
```

```{r}
#grab_road_in_pg <- grab_road_in_pg[st_is_empty(grab_road_in_pg$geometry) == FALSE, ]

```

```{r}
tmap_mode('plot')
tm_shape(roads_in_punggol, geometry_type = "lines") + 
  tm_lines()

  
```

```{r}
tmap_mode('plot')

# Plot roads
tm_shape(roads_in_punggol, geometry_type = "lines") + 
  tm_lines(lwd = 1, col = "blue") +
  
  # Plot Punggol area boundary
  tm_shape(pg) +
  tm_borders() +
  
  # Plot Grab origin data
  tm_shape(grab_in_punggol) +
  tm_dots()
```

```{r}
roads_lines <- roads_in_punggol[st_geometry_type(roads_in_punggol) == "LINESTRING", ]

# Apply lixelize_lines with mindist
lixels <- lixelize_lines(roads_lines,5000, mindist = 2500)
```

```{r}
samples <- lines_center(lixels)
```

```{r}
densities <- nkde(roads_lines, 
                  events = grab_in_punggol,
                  w = rep(1,nrow(grab_in_punggol)),
                  samples = samples,
                  kernel_name = "quartic",
                  bw = 300, 
                  div= "bw", 
                  method = "simple", 
                  digits = 1, 
                  tol = 1,
                  grid_shape = c(1,1), 
                  max_depth = 8,
                  agg = 5, #we aggregate events within a 5m radius (faster calculation)
                  sparse = TRUE,
                  verbose = FALSE)
```

```{r}
samples$density <- densities
lixels$density <- densities
```

```{r}
# rescaling to help the mapping
samples$density <- samples$density*1000
lixels$density <- lixels$density*1000
```

```{r}
tmap_mode('view')
tm_shape(lixels)+
  tm_lines(col="density")+
tm_shape(grab_in_punggol)+
  tm_dots()
```

## 5. Describe the spatial patterns revealed by the kernel density maps

From the density map above, it shows that the crossroads has the highest density among the all other roads. Those are popular pick-up points. This also shows a behaviour of passengers are more likely to take their ride in main streets. This implies that more grab cars will pass by the main streets as well.
