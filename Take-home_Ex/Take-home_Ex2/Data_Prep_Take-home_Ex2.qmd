---
title: "Take-home Exercise 2: Data Preparation"
format: html
execute:  
  message: false 
  warning: false
date: "`r Sys.Date()`" 
---

**This page showcases the steps of doing data preparation.**

## Getting Started

```{r}
pacman::p_load(arrow, lubridate, tidyverse,maptools, sf, spNetwork, raster, spatstat, tmap)

```

## 1. Loading Aspatial Data of Dengue Fever

```{r}
dengue_daily <- read.csv("data/aspatial/Dengue_Daily.csv")
```

### 1.1 Filtering the data into Week 31 - 50 of 2023 and selecting the necessary data

```{r}
dengue_filtered <- dengue_daily[dengue_daily$發病日 >= as.Date("2023-07-30") & dengue_daily$發病日 <= as.Date("2023-12-16"), ] 
```

```{r}
dengue_filtered['epi_week'] <- epiweek(dengue_filtered$發病日)
```

```{r}
colSums(is.na(dengue_filtered))
```

```{r}
#| eval: false
#write_rds(dengue_filtered, "data/rds/dengue_filtered.rds")
```

### 1.2 Transforming the coordination of the dengue fever data

#### 1.2.1 Checking of null values col: 最小統計區中心點X and 最小統計區中心點Y

```{r}
sum(is.na(dengue_filtered$最小統計區中心點X))
sum(is.nan(dengue_filtered$最小統計區中心點X))
```

Since fan

```{r}
sum(is.na(dengue_filtered$最小統計區中心點Y))
sum(is.nan(dengue_filtered$最小統計區中心點Y))
```

```{r}
class(dengue_filtered$最小統計區中心點X)
class(dengue_filtered$最小統計區中心點Y)
```

#### 1.2.2 Changing the class type of important columns

**Since the class type of col: is in "character", we need to change the data type into numerical**

```{r}
# Convert character columns to numeric
dengue_filtered$最小統計區中心點X <- as.numeric(dengue_filtered$最小統計區中心點X)
dengue_filtered$最小統計區中心點Y <- as.numeric(dengue_filtered$最小統計區中心點Y)
```

```{r}
# Remove rows with non-numeric values in the specified columns
dengue_filtered <- dengue_filtered[!is.na(as.numeric(dengue_filtered$最小統計區中心點X)), ]
dengue_filtered <- dengue_filtered[!is.na(as.numeric(dengue_filtered$最小統計區中心點Y)), ]

```

```{r}
class(dengue_filtered$最小統計區中心點X)
class(dengue_filtered$最小統計區中心點Y)
```

```{r}
dengue_sf <- st_as_sf(dengue_filtered, 
                      coords = c("最小統計區中心點X","最小統計區中心點Y"),
                      crs=3824)
```

```{r}
summary(dengue_sf)
```

### 1.3 Filtering Important Columns for analysis

#### 1.3.1 Changing the column names into English for easier reading

```{r}
colnames(dengue_sf)
```

| Attribute          | Translation in English           |
|--------------------|----------------------------------|
| 發病日             | Onset date                       |
| 個案研判日         | Case confirmation date           |
| 通報日             | Reporting date                   |
| 性別               | Gender                           |
| 年齡層             | Age Group                        |
| 居住縣市           | Residential County               |
| 居住鄉鎮           | Residential Town name            |
| 居住村里           | Residential Village              |
| 最小統計區         | Smallest statistical area        |
| 一級統計區         | First-level statistical area     |
| 二級統計區         | Second-level statistical area    |
| 感染縣市           | Infected county                  |
| 感染鄉鎮           | Infected town                    |
| 感染村里           | Infected village                 |
| 是否境外移入       | Whether imported from overseas   |
| 感染國家           | Infected country                 |
| 確定病例數         | Confirmed case count             |
| 居住村里代碼       | Residential village code         |
| 感染村里代碼       | Infected village code            |
| 血清型             | Serotype                         |
| 內政部居住縣市代碼 | Internal residential county code |
| 內政部居住鄉鎮代碼 | Internal residential town code   |
| 內政部感染縣市代碼 | Internal infected county code    |
| 內政部感染鄉鎮代碼 | Internal infected town code      |

As there are many rows of data, I will be only transforming useful columns, such as 發病日, 通報日, 性別, 年齡層, 感染縣市, 感染鄉鎮, 感染村里, 感染國家 and 確定病例數.

```{r}
eng_dengue_data <- dengue_sf %>% rename(
  ONSET_DAY = 發病日,
  CASE_CONFIRMATION_DAY = 通報日, 
  GENDER = 性別,
  AGE_GRP = 年齡層,
  COUNTYNAME = 感染縣市, 
  TOWNNAME = 感染鄉鎮, 
  VILLNAME = 感染村里,
  INFECTED_COUNTRY = 感染國家, 
  CONFIRMED_CASE_COUNT = 確定病例數
)
```

#### 1.3.2 Reduction of data size

```{r}
dengue_sf_1 <- eng_dengue_data[, c("ONSET_DAY", "CASE_CONFIRMATION_DAY", "GENDER", "AGE_GRP", "COUNTYNAME", "TOWNNAME", "VILLNAME", "INFECTED_COUNTRY","CONFIRMED_CASE_COUNT", "epi_week","geometry")]

```

```{r}
dengue_data <- write_rds(dengue_sf_1, "data/rds/dengue_data.rds")
```

## 2. Loading Geo-spatial Data: TaiNan Village Data

```{r}
tainan_village <- st_read(dsn = "data/geospatial", 
                          layer = "TAINAN_VILLAGE")
```

```{r}
head(tainan_village)
```

```{r}
filtered_tainan_village <- tainan_village %>%
  filter(TOWNID %in% c("D01", "D02", "D04", "D06", "D07", "D08", "D32", "D39")) %>% st_transform()
```

```{r}
write_rds(filtered_tainan_village, "data/rds/filtered_tainan_village.rds")
```

### 2.1 Understanding the geospatial data

```{r}
#| eval: false
plot(st_geometry(filtered_tainan_village))
```

```{r}
#| eval: false
tmap_mode("plot")
tm_shape(filtered_tainan_village) +
  tm_polygons("TOWNID")
  tm_borders()
```

```{r}
#| eval: false
tmap_mode("plot")
tm_shape(filtered_tainan_village) +
  tm_fill("VILLNAME", 
          alpha = 0.2) +
  tm_borders()
```

# 3. Joining Data for analysis

```{r}
dengue_data <- read_rds("data/rds/dengue_data.rds")
```

```{r}
tainan_v <- read_rds("data/rds/filtered_tainan_village.rds")
```

```{r}
st_crs(dengue_data)
#st_crs(tainan_v)
```

```{r}
tainan_dengue <- st_join(tainan_v,dengue_data)
```

```{r}
write_rds(tainan_dengue, "data/rds/tainan_dengue.rds")
```

```{r}
head(tainan_dengue)
```
