{
  "hash": "37db1176b7760dea326d3263bf05944a",
  "result": {
    "markdown": "---\ntitle: \"In-Class_Ex9\"\nformat: html\ndate-modified: \"last-modified\"\nexecute:  \n  warning: false\n  freeze: true\n  message: false \n  eval: true \n  echo: true \n  fig-retine: 3\ndate: \"2024-03-18\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, GWmodel,\n               SpatialML, tmap, \n               rsample, tidymodels, \n               tidyverse, gtsummary, \n               rpart, rpart.plot,\n               ggstatsplot, performance)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_sf <- read_rds('data/rds/HDB_resale.rds')\n```\n:::\n\n\nData Sampling\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nresale_split <- initial_split(\n  rs_sf, \n  prop = 5/10,)\n\ntrain_sf <- training(resale_split)\ntest_sf <- testing(resale_split)\n```\n:::\n\n\nmust have set.seed\n\nAlways retrieve the data (do not put #\\| eval: False on read_rds)\n\nprop = 5/10 –\\> split it into 50%, 50%\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_df <- train_sf %>% \n  st_drop_geometry() %>% \n  as.data.frame()\n\ntest_df <- test_sf %>%\n  st_drop_geometry()%>% \n  as.data.frame()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_sf1 <- rs_sf %>% \n  st_drop_geometry()\nggcorrmat(rs_sf1[,2:17])\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex9_files/figure-html/unnamed-chunk-5-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_df <- train_df %>% \n  select(-c(PROX_CHAS))\ntrain_sf <- train_sf %>% \n  select(-c(PROX_CHAS))\ntest_df <- test_df %>% \n  select (-c(PROX_CHAS))\ntest_sf <- test_sf %>% \n  select (-c(PROX_CHAS))\n```\n:::\n\n\n-c -\\> exclude PROX_CHAS\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_mlr <- lm(formula = RESALE_PRICE ~ \n               FLOOR_AREA_SQM + \n               STOREY_ORDER + \n               REMAINING_LEASE_MTHS + \n               PROX_CBD+ \n               PROX_ELDERLYCARE + \n               PROX_HAWKER + \n               PROX_MRT + \n               PROX_PARK + \n               PROX_GOOD_PRISCH + \n               PROX_MALL + \n               PROX_SUPERMARKET + \n               WITHIN_350M_KINDERGARTEN + \n               WITHIN_350M_CHILDCARE + \n               WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH, \n             data = train_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(rs_sf)\ncoords_train <- st_coordinates(train_sf)\ncoords_test <- st_coordinates(test_sf)\n```\n:::\n\n\nexplicitly extract the coordinates from sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrs_rp <-  rpart(\n  formula = RESALE_PRICE ~ \n               FLOOR_AREA_SQM + \n               STOREY_ORDER + \n               REMAINING_LEASE_MTHS + \n               PROX_CBD+ \n               PROX_ELDERLYCARE + \n               PROX_HAWKER + \n               PROX_MRT + \n               PROX_PARK + \n               PROX_GOOD_PRISCH + \n               PROX_MALL + \n               PROX_SUPERMARKET + \n               WITHIN_350M_KINDERGARTEN + \n               WITHIN_350M_CHILDCARE + \n               WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH, \n             data = train_df)\nrs_rp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nn= 7950 \n\nnode), split, n, deviance, yval\n      * denotes terminal node\n\n 1) root 7950 1.139546e+14 433705.6  \n   2) PROX_CBD>=7.974483 6665 4.472144e+13 403736.0  \n     4) REMAINING_LEASE_MTHS< 1020.5 4228 1.573100e+13 370187.4  \n       8) PROX_GOOD_PRISCH>=3.629405 2271 3.851141e+12 340796.1 *\n       9) PROX_GOOD_PRISCH< 3.629405 1957 7.641480e+12 404294.6 *\n     5) REMAINING_LEASE_MTHS>=1020.5 2437 1.597594e+13 461940.1  \n      10) PROX_CBD>=10.40657 2331 9.762718e+12 451754.4  \n        20) PROX_GOOD_PRISCH>=4.866983 1123 2.801796e+12 423493.8 *\n        21) PROX_GOOD_PRISCH< 4.866983 1208 5.230246e+12 478026.4 *\n      11) PROX_CBD< 10.40657 106 6.532500e+11 685929.1 *\n   3) PROX_CBD< 7.974483 1285 3.219685e+13 589151.4  \n     6) REMAINING_LEASE_MTHS< 930.5 745 6.613365e+12 486637.6  \n      12) FLOOR_AREA_SQM< 98.5 451 2.446537e+12 442460.5 *\n      13) FLOOR_AREA_SQM>=98.5 294 1.936449e+12 554405.7 *\n     7) REMAINING_LEASE_MTHS>=930.5 540 6.952722e+12 730582.5  \n      14) REMAINING_LEASE_MTHS< 1071.5 314 2.461969e+12 676641.3 *\n      15) REMAINING_LEASE_MTHS>=1071.5 226 2.307737e+12 805527.4 *\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrpart.plot(rs_rp)\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex9_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrs_rf <-  ranger(\n  formula = RESALE_PRICE ~ \n               FLOOR_AREA_SQM + \n               STOREY_ORDER + \n               REMAINING_LEASE_MTHS + \n               PROX_CBD+ \n               PROX_ELDERLYCARE + \n               PROX_HAWKER + \n               PROX_MRT + \n               PROX_PARK + \n               PROX_GOOD_PRISCH + \n               PROX_MALL + \n               PROX_SUPERMARKET + \n               WITHIN_350M_KINDERGARTEN + \n               WITHIN_350M_CHILDCARE + \n               WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH, \n             data = train_df, \n              importance =  \"impurity\")\nrs_rf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRanger result\n\nCall:\n ranger(formula = RESALE_PRICE ~ FLOOR_AREA_SQM + STOREY_ORDER +      REMAINING_LEASE_MTHS + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +      PROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + PROX_SUPERMARKET +      WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +      WITHIN_1KM_PRISCH, data = train_df, importance = \"impurity\") \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      7950 \nNumber of independent variables:  15 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       738005688 \nR squared (OOB):                  0.9485198 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvi <- as.data.frame(rs_rf$variable.importance)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvi$variables <- rownames(vi)\nvi <- vi %>% \n  rename(vi = 'rs_rf$variable.importance')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = vi, \n       aes(x = vi, \n           y = reorder(variables, vi)))+ \n  geom_bar(stat='identity')\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex9_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nreorder() –\\> arrange the column in order from. Otherwise, it will be order in alpha order\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrs_grf <-  grf(\n  formula = RESALE_PRICE ~ \n               FLOOR_AREA_SQM + \n               STOREY_ORDER + \n               REMAINING_LEASE_MTHS + \n               PROX_CBD+ \n               PROX_ELDERLYCARE + \n               PROX_HAWKER + \n               PROX_MRT + \n               PROX_PARK + \n               PROX_GOOD_PRISCH + \n               PROX_MALL + \n               PROX_SUPERMARKET + \n               WITHIN_350M_KINDERGARTEN + \n               WITHIN_350M_CHILDCARE + \n               WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH, \n              data = train_df, \n              kernal = \"adaptive\",\n              coords = coords_train, \n              bw.min = 25, \n              bw.max = 60 ,\n              step = 1, \n              nthreads = 16, \n              forest = False,\n              weighted = )\n```\n:::\n\n\nchange the area scope to reduce the run time\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_df <- cbind(test_sf, coords_test) %>% \n  st_drop_geometry()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrf_pref <- predict.grf(rs_grf, \n                        test_df, \n                        x.var.name = \"X\", \n                        y.var.name = \"Y\",\n                        local.w = 1, \n                        global.w =1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrf_pred <- read_rds(data/models/grf_pred.rds)\ngrf_pred_df <- as.data.frame(grf_pred)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- test_df %>% \n  select(RESALE_PRICE)%>% \n  cbind(grf_pred_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_pred <- predict(rs_rf, test_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrd_pred_df <- as.data.frame(rf_pred$predictions) %>% \n  rename(rf_pred = \"rf_pred$predictions\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- cbind(test_pred,\n                   rf_pref_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmlr_pred <- predict(rs_mlr, test_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmlr_pred_dr <- as.data.frame(mlr_pred) %>% \n  rename(mlr_pred = \"mlr_pred\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyardstick::rmse(test_pred,\n                RESALE_PRICE,\n                mlr_pred)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc <- test_pred %>% \n  pivot_longer(cols = c(2:4),\n               names_to = \"models\",\n               values_to = \"predicted\")\n```\n:::\n",
    "supporting": [
      "In-Class_Ex9_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}