{
  "hash": "f537dcad8e5c0ee7552aa4ecd65f8e9f",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 1: Data Preparation\"\ndate: \"2024-02-26\" \nformat: html\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\neditor: visual\n---\n\n\n# Getting Started\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(arrow, lubridate, tidyverse,maptools, sf, spNetwork, raster, spatstat, tmap)\n```\n:::\n\n\n## 1. Loading of Data\n\n### 1.1 Loading of grab data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrab_df <- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n```\n:::\n\n\n### 1.2 Loading of Road data set from OpenStreetMap\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroad_data <- st_read(dsn = \"data/malaysia-singapore-brunei-latest-free.shp\", \n                     layer = \"gis_osm_roads_free_1\")\n```\n:::\n\n\n**Checking the CRS of road data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(road_data)\n```\n:::\n\n\n**This is a wrong EPSG code because the correct EPSG code for svy21 should be 3414. Since it indicates that EPSG is 4326, we need to change the EPSG code into 3414.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroad_data_3414 <- st_transform(road_data, 3414)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(road_data_3414)\n```\n:::\n\n\n### 1.3 Loading of Master Plan 2019 Subzone Boundary (No Sea) from Data.gov.sg\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"data/MPSZ-2019\", \n                layer = \"MPSZ-2019\")\n```\n:::\n\n\n**Checking the Coordination of mpsz_sf**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mpsz)\n```\n:::\n\n\n**This is a wrong EPSG code because the correct EPSG code for svy21 should be 3414. Since it indicates that EPSG is 4326, we need to change the EPSG code into 3414.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz3414 <- st_transform(mpsz, 3414)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mpsz3414)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(mpsz3414, \"data/rds/mpsz3414.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz3414 <- read_rds(\"data/rds/mpsz3414.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(mpsz3414))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1-DataPrep_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## 2. Extracting Geospatial Data Layer\n\n### 2.1 Extracting Grab taxi locations by origin\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrab_df$pingtimstamp <- as_datetime(grab_df$pingtimestamp)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrab_origin <- grab_df %>% \n  group_by(trj_id) %>%\n  arrange(pingtimestamp) %>%\n  filter(row_number()==1) %>%\n  mutate(weekday = wday(pingtimstamp,\n                        label = TRUE,\n                        abbr = TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n```\n:::\n\n\n### 2.1.2 Transform grab_origin_df into spatial data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_grab_origin_data <- st_as_sf(grab_origin, \n                                coords = c(\"rawlng\",\"rawlat\"), \n                                crs = 4326) %>% \n  st_transform(crs = 3414)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(sf_grab_origin_data, \"data/rds/sf_grab_origin_data.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_grab_origin_data <- read_rds(\"data/rds/sf_grab_origin_data.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(sf_grab_origin_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    trj_id          driving_mode          osname          pingtimestamp      \n Length:28000       Length:28000       Length:28000       Min.   :1.555e+09  \n Class :character   Class :character   Class :character   1st Qu.:1.555e+09  \n Mode  :character   Mode  :character   Mode  :character   Median :1.555e+09  \n                                                          Mean   :1.555e+09  \n                                                          3rd Qu.:1.556e+09  \n                                                          Max.   :1.556e+09  \n                                                                             \n     speed          bearing         accuracy      \n Min.   :-1.00   Min.   :  0.0   Min.   :  1.400  \n 1st Qu.: 6.25   1st Qu.: 90.0   1st Qu.:  3.900  \n Median :11.10   Median :179.0   Median :  6.000  \n Mean   :10.75   Mean   :172.6   Mean   :  7.476  \n 3rd Qu.:15.19   3rd Qu.:256.0   3rd Qu.: 10.000  \n Max.   :31.71   Max.   :359.0   Max.   :547.000  \n                                                  \n  pingtimstamp                    weekday       start_hr          day       \n Min.   :2019-04-08 00:09:40.00   Sun:3983   10     : 2106   17     : 2012  \n 1st Qu.:2019-04-11 08:48:39.50   Mon:3975   9      : 2100   18     : 2008  \n Median :2019-04-15 00:08:50.50   Tue:4008   0      : 1935   12     : 2007  \n Mean   :2019-04-14 21:30:13.19   Wed:4016   1      : 1921   9      : 2004  \n 3rd Qu.:2019-04-18 10:48:07.00   Thu:4008   7      : 1540   16     : 2004  \n Max.   :2019-04-21 23:34:01.00   Fri:4002   8      : 1538   13     : 2004  \n                                  Sat:4008   (Other):16860   (Other):15961  \n          geometry    \n POINT        :28000  \n epsg:3414    :    0  \n +proj=tmer...:    0  \n                      \n                      \n                      \n                      \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\ntm_shape(sf_grab_origin_data)+\n  tm_dots()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1-DataPrep_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n### 2.2 Extracting Singapore boundary layer excluding outer islands\n\n\n::: {.cell}\n\n```{.r .cell-code}\nouter_islands <- mpsz3414[grep(\"island\", mpsz3414$PLN_AREA_N, ignore.case = TRUE), ] \n#print(outer_islands) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot(outer_islands)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_map <- st_union(mpsz3414, outer_islands)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap_without_outer_islands <- st_difference(mpsz3414, st_union(outer_islands))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot(map_without_outer_islands)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_map_without_outer_islands <- st_cast(map_without_outer_islands, \"POLYGON\")\n```\n:::\n\n\n### 2.3 Extracting Road Layer within Singapore excluding outer islands\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroads_in_singapore <- st_intersection(road_data_3414, map_without_outer_islands)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_roads_in_sg <- st_cast(roads_in_singapore, \"LINESTRING\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(sf_roads_in_sg, \"data/rds/sf_roads_in_sg.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_roads_in_sg <- read_rds(\"data/rds/sf_roads_in_sg.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot(map_without_outer_islands$geometry, main = \"Roads in Singapore\")\n#plot(roads_in_singapore$geometry, add = TRUE, col = \"red\")\n```\n:::\n\n\n## 3. Traditional Kernel Density Estimation layers\n\nTo reduce the data size and focus on one specific area, I will be doing the analysis on Punggol town.\n\n### 3.1 Creating Sg_boundary owin object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_sf <- sf_map_without_outer_islands %>%    \n  st_union()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(sg_sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrab_origin_ppp <- as.ppp(sf_grab_origin_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(grab_origin_ppp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMarked planar point pattern:  28000 points\nAverage intensity 2.47621e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    28000 character character \n\nWindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n                    (46180 x 24480 units)\nWindow area = 1130760000 square units\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(grab_origin_ppp)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(grab_origin_ppp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMarked planar point pattern:  28000 points\nAverage intensity 2.47621e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    28000 character character \n\nWindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n                    (46180 x 24480 units)\nWindow area = 1130760000 square units\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_owin <- as.owin(sg_sf)  \nsummary(sg_owin)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWindow: polygonal boundary\n31 separate polygons (29 holes)\n                  vertices         area relative.area\npolygon 1            12458  6.62835e+08      9.98e-01\npolygon 2              285  1.61128e+06      2.43e-03\npolygon 3 (hole)        41 -4.01660e+04     -6.05e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.70e-05\npolygon 5 (hole)         3 -4.14099e-04     -6.23e-13\npolygon 6 (hole)         4 -2.86396e-01     -4.31e-10\npolygon 7 (hole)         3 -1.81439e-04     -2.73e-13\npolygon 8 (hole)         3 -8.68789e-04     -1.31e-12\npolygon 9 (hole)         3 -5.99535e-04     -9.02e-13\npolygon 10 (hole)        3 -3.04561e-04     -4.58e-13\npolygon 11 (hole)        3 -4.46076e-04     -6.71e-13\npolygon 12 (hole)        3 -3.39794e-04     -5.11e-13\npolygon 13 (hole)        3 -4.52043e-05     -6.80e-14\npolygon 14 (hole)        3 -3.90173e-05     -5.87e-14\npolygon 15 (hole)        3 -9.59850e-05     -1.44e-13\npolygon 16 (hole)        4 -2.54488e-04     -3.83e-13\npolygon 17 (hole)        4 -4.28453e-01     -6.45e-10\npolygon 18 (hole)        4 -2.18616e-04     -3.29e-13\npolygon 19 (hole)        5 -2.44411e-04     -3.68e-13\npolygon 20 (hole)        5 -3.64686e-02     -5.49e-11\npolygon 21 (hole)        6 -8.37554e-01     -1.26e-09\npolygon 22 (hole)       38 -7.79904e+03     -1.17e-05\npolygon 23 (hole)        3 -3.41897e-05     -5.15e-14\npolygon 24 (hole)        3 -3.65499e-03     -5.50e-12\npolygon 25 (hole)        3 -4.95057e-02     -7.45e-11\npolygon 26 (hole)        5 -2.92235e-04     -4.40e-13\npolygon 27 (hole)        3 -7.43616e-06     -1.12e-14\npolygon 28 (hole)      270 -1.21455e+03     -1.83e-06\npolygon 29 (hole)       19 -4.39650e+00     -6.62e-09\npolygon 30 (hole)       35 -1.38385e+02     -2.08e-07\npolygon 31 (hole)       23 -1.99656e+01     -3.01e-08\nenclosing rectangle: [2667.54, 50284.23] x [21448.47, 50256.33] units\n                     (47620 x 28810 units)\nWindow area = 664346000 square units\nFraction of frame area: 0.484\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_grab_origin_ppp = grab_origin_ppp[sg_owin] \nsummary(sg_grab_origin_ppp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMarked planar point pattern:  27875 points\nAverage intensity 4.195855e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    27875 character character \n\nWindow: polygonal boundary\n31 separate polygons (29 holes)\n                  vertices         area relative.area\npolygon 1            12458  6.62835e+08      9.98e-01\npolygon 2              285  1.61128e+06      2.43e-03\npolygon 3 (hole)        41 -4.01660e+04     -6.05e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.70e-05\npolygon 5 (hole)         3 -4.14099e-04     -6.23e-13\npolygon 6 (hole)         4 -2.86396e-01     -4.31e-10\npolygon 7 (hole)         3 -1.81439e-04     -2.73e-13\npolygon 8 (hole)         3 -8.68789e-04     -1.31e-12\npolygon 9 (hole)         3 -5.99535e-04     -9.02e-13\npolygon 10 (hole)        3 -3.04561e-04     -4.58e-13\npolygon 11 (hole)        3 -4.46076e-04     -6.71e-13\npolygon 12 (hole)        3 -3.39794e-04     -5.11e-13\npolygon 13 (hole)        3 -4.52043e-05     -6.80e-14\npolygon 14 (hole)        3 -3.90173e-05     -5.87e-14\npolygon 15 (hole)        3 -9.59850e-05     -1.44e-13\npolygon 16 (hole)        4 -2.54488e-04     -3.83e-13\npolygon 17 (hole)        4 -4.28453e-01     -6.45e-10\npolygon 18 (hole)        4 -2.18616e-04     -3.29e-13\npolygon 19 (hole)        5 -2.44411e-04     -3.68e-13\npolygon 20 (hole)        5 -3.64686e-02     -5.49e-11\npolygon 21 (hole)        6 -8.37554e-01     -1.26e-09\npolygon 22 (hole)       38 -7.79904e+03     -1.17e-05\npolygon 23 (hole)        3 -3.41897e-05     -5.15e-14\npolygon 24 (hole)        3 -3.65499e-03     -5.50e-12\npolygon 25 (hole)        3 -4.95057e-02     -7.45e-11\npolygon 26 (hole)        5 -2.92235e-04     -4.40e-13\npolygon 27 (hole)        3 -7.43616e-06     -1.12e-14\npolygon 28 (hole)      270 -1.21455e+03     -1.83e-06\npolygon 29 (hole)       19 -4.39650e+00     -6.62e-09\npolygon 30 (hole)       35 -1.38385e+02     -2.08e-07\npolygon 31 (hole)       23 -1.99656e+01     -3.01e-08\nenclosing rectangle: [2667.54, 50284.23] x [21448.47, 50256.33] units\n                     (47620 x 28810 units)\nWindow area = 664346000 square units\nFraction of frame area: 0.484\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(sg_grab_origin_ppp)\n```\n:::\n",
    "supporting": [
      "Take-home_Ex1-DataPrep_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}