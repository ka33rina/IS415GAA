[
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Data_Prep_Take-home_Ex2.html",
    "href": "Take-home_Ex/Take-home_Ex2/Data_Prep_Take-home_Ex2.html",
    "title": "Take-home_Ex2: Data Preparation",
    "section": "",
    "text": "This page showcases the steps of doing data preparation."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html",
    "href": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html",
    "title": "In-Class_Ex05",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, tidyverse)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#getting-started",
    "href": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#getting-started",
    "title": "In-Class_Ex05",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, tidyverse)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#the-data",
    "href": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#the-data",
    "title": "In-Class_Ex05",
    "section": "The Data:",
    "text": "The Data:\nThere are 2 data sets in this use case, they are:\n\nHunan, a geospatial dat set in ESRI shapefile format, and\nHunan_2012, an attribute data set in csv format\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\In-Class_Ex\\In-Class_Ex5\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n** this is to remain the geometry data in a sf format **\n\nhunan_GDPPC &lt;- left_join(hunan, hunan2012) %&gt;%\n               dplyr::select(1:4, 7, 15)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#plotting-a-choropleth-map",
    "href": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#plotting-a-choropleth-map",
    "title": "In-Class_Ex05",
    "section": "Plotting a choropleth map",
    "text": "Plotting a choropleth map\n\ntmap_mode(\"plot\")\ntm_shape(hunan_GDPPC)+\n  tm_fill(\"GDPPC\",\n          style = \"quantile\",\n          palette = \"Blues\", \n          title = \"GDPPC\")+\n  tm_layout(main.title = \"Distribution of GDP per capita by county/ Hunan Province\",\n            main.title.position = \"Center\",\n            main.title.size = 0.73,\n            legend.height = 0.45, \n            legend.width = 0.35, \n            frame = TRUE) + \n  tm_borders(alpha = 0.5)+\n  tm_compass(type=\"8star\", size = 2) + \n  tm_scale_bar() + \n  tm_grid(alpha=0.2)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#deriving-continguity-weights-queens-method",
    "href": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#deriving-continguity-weights-queens-method",
    "title": "In-Class_Ex05",
    "section": "Deriving continguity weights: Queen’s method",
    "text": "Deriving continguity weights: Queen’s method\nsave it into a column and table name: nb and wt\ncombine the 2 codes into 1\nIn the code chuck below, queen method is ised to derive the contiguity weights:\n\nwm_q &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                       style = \"W\"),\n         .before =1)\n\nnb = will show the neighbours of the particular county"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#computing-global-morani",
    "href": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#computing-global-morani",
    "title": "In-Class_Ex05",
    "section": "Computing Global Moran’I",
    "text": "Computing Global Moran’I\nin the code chuck below, global_moral() function is used to compute the Moran’s I value: Different from spdep package, the output is a tibble data.frame.\n\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n\nglimpse(moranI)\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#performing-global-morani-permutation-test",
    "href": "In-Class_Ex/In-Class_Ex5/In-Class_Ex5.html#performing-global-morani-permutation-test",
    "title": "In-Class_Ex05",
    "section": "Performing Global Moran’I permutation test",
    "text": "Performing Global Moran’I permutation test\nIn practice, monte- carlo simulation should be used to perform the statistical test.\nIt is always a good practice to use set.seed() before performing simulation. This is to ensure that the computation is reproducible.\n(reduce the nsim to 49 if the computation time is very long, it will be good for simulation as well)\n\nset.seed(1234)\nglobal_moran_perm(wm_q$GDPPC,\n                    wm_q$nb, \n                    wm_q$wt,\n                  nsim =99 )\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nThe statistical report above show that the p-value is smaller than alpha value of 0.05. Hence, we have enough statistical evidence to reject the null hypothesis that the spatial distribution of GPD per capita are resemble random distribution (i.e. independent from spatial). Because the Moran’s I statistics is greater than O. We can infer that the spatial distribution shows sign of clustering.\n** The number of simulation is always equal to nsim +1. This mean in nsim =99. This mean 100 simulation will be performed. **"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#converting-sf-data-frames-to-sps-spatial-class",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#converting-sf-data-frames-to-sps-spatial-class",
    "title": "Hands-on_Ex03",
    "section": "Converting sf data frames to sp’s Spatial* class",
    "text": "Converting sf data frames to sp’s Spatial* class\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#converting-the-spatial-class-into-generic-sp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#converting-the-spatial-class-into-generic-sp-format",
    "title": "Hands-on_Ex03",
    "section": "Converting the Spatial* class into generic sp format",
    "text": "Converting the Spatial* class into generic sp format\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "title": "Hands-on_Ex03",
    "section": "Converting the generic sp format into spatstat’s ppp format",
    "text": "Converting the generic sp format into spatstat’s ppp format\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1925 points\nwindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1925 points\nAverage intensity 2.417323e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#handling-duplicated-points",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#handling-duplicated-points",
    "title": "Hands-on_Ex03",
    "section": "Handling duplicated points",
    "text": "Handling duplicated points\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\n\nTo count the number of co-indicence point, we will use the multiplicity() function as shown in the code chunk below.\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    3    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    4    1    1    1    1    1    1    1    1    1    1    2 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    3    1    1    1    2    1   10    1    1    1    1    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    2    1    1    3    1    1    1    2    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    2    2    2    1    1    1    1    1    1    1    1    2    1    1    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    2    2    2    1    1    1    1    1    2    1    4    1    1    2 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   3    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   1    1    1    1    1   10    1    1    3    1    1    1    1    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    2    6    1    2    1    1    2    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   3    2    3    2    1    2    1    1    2    4    1    6    6    1    1    1 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   2    1    1    1    1    2    1    1    1    1    1    1    3    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    4    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    2    1    1    1    2    1    1    1    2    1    1    1    1    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    2    1    2    2    1    1    1    1    2    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   4    1    1    1    1    2    1    1    1    1    1    1    2    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   2    2    1    1    1    1    1   10    1    2    1    1    1    2    1    3 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1   10   10   10    1    1    1    1    1    1    1    1    1 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    2    1    2    1    1    1    1    3    1    2    1    1    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    3    1    1    1    1    1    2    1    1    2 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    3    1    1    1    1    1    1    1    1    2    2    2    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    3    1    1    1    2    1    1    1    2    2    1    1    1    1    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    4    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    4    1    1    1    1    1    1    4    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    2    1    1 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    3    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    1    1    1    1   10    1    1    1    1    1    2 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    1    2    1    2    1   10    1    4    1    2    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   3    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    3    1    1    3    1    1    1    1    2    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    2 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    2    1    1    1    1    1    2    2    1    1    1    1    2    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    2    1    2    1    1    1    2    1    1    1    2    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    2    1    1    2    1    1    1    1    1    1    1    1    2    1 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    2    2    1    1    1    1    2    1    1    1    1    2    1    1    2 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    2    4    1    1    1    1    1    1    2    1    2    2    2 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   2    1    1    1    1    2    1    1    2    2    2    2    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    2    2    2    1    1    1    1    1    2    1    1    2    2    2    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    2    1    1    2    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   2    1    2    1    2    1    1    1    1    1    1    2    2    1    1    2 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    2    1    2    1    2    1    1    1    1    1    2    1    1    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    2    1    2    2    2    2    2    1    1    1    1    1    2    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    2    1    1    2    1    1    1    1    2    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    3    1    1    1    1    1    1    1   10 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   2    1    3    2    1    2    1    1    2    3    2    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    2    1    2    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    4    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n  10    1    2    4    1    1    1    4    1    4    1    1    1    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    1    1    1    1    1    4    2    3    2    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   2    2    1    1    1    1    1    2    2    3    1    1    1    1    1    2 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   2    2    2    1    1    1    6    1    1    1    1    1    1    1    1    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    1    1    4    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    2    2    1    1    1    1    1    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    2    1    1    1    1    2    1    1    1    1    2    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   2    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 \n   1    1    1    1    1    1    1    1    1    6    1    1    1    1    1    1 \n1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 \n   1    1    1    1    1    1    1    3    1    1    4    1    1    2    1    1 \n1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 \n   2    1    1    1    2    1    4    1    2    1    1    1    1    1    1    1 \n1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 \n   1    1    1    1    1    1    1    1    2    1    1    2    1    1    1    1 \n1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 \n   1    1    1    1    2    1    1    3    1    1    1    2    1    1    1    1 \n1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 \n   2    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 \n   3    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 \n   1    1    1    4    1    1    1    6    1    1    1    1    1    1    1    1 \n1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 \n   1    1    1    2    1    1    1    2    1    1    1    1    1    2    1    1 \n1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 \n   1    2    1    1    1    1    1    1    1    1    2    2    2    1    1    1 \n1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 \n   2    1    2    1    2    1    2    1    1    2    1    2    2    2    2    1 \n1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 \n   1    1    1    1    1    2    1    1    1    2    1    1    1    1    2    1 \n1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 \n   1    4    1    4    1    4    1    1    2    1    1    1    1    1    3    1 \n1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 \n   1    1    1    2    2    2    2    2    2    2    2    1    1    2    2    2 \n1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 \n   1    2    1    1    1    1    1    2    2    2    1    2    2    2    2    1 \n1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 \n   2    1    1    1    1    1    1    1    2    2    1    2    1    1    1    1 \n1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 \n   1    1    1    1    2    1    2    2    2    2    2    2    1    1    2    1 \n1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 \n   1    1    1    2    2    2    2    2    1    1    1    2    1    1    2    2 \n1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 \n   1    2    1    1    2    1    1    2    2    2    1    2    1    2    1    1 \n1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 \n   1    1    1    1    1    1    2    1    1    1    1    4    1    1    1    1 \n1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 \n   3    1    1    2    1    1    1    2    1    1    1    1    1    2    2    1 \n1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 \n   1    1    2    1    2    2    1    1    1    1    1    2    1    1    2    1 \n1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 \n   1    3    2    2    2    1    2    1    3    1    1    1    1    1    1    1 \n1921 1922 1923 1924 1925 \n   1    1    1    1    3 \n\n\n\n\nIf we want to know how many locations have more than one point event, we can use the code chunk below.\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 338\n\n\n\n\nTo view the locations of these duplicate point events, we will plot childcare data by using the code chunk below.\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\nImplementing jittering approach\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nChecking any duplicates\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#creating-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#creating-owin-object",
    "title": "Hands-on_Ex03",
    "section": "Creating Owin Object",
    "text": "Creating Owin Object\n\nsg_owin &lt;- as(sg_sp, \"owin\")\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#combining-point-events-object-and-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#combining-point-events-object-and-owin-object",
    "title": "Hands-on_Ex03",
    "section": "Combining point events object and owin object",
    "text": "Combining point events object and owin object\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1925 points\nAverage intensity 2.570982e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414\n\n\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#computing-kernel-density-estimation-using-automatic-bandwidth-selection-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#computing-kernel-density-estimation-using-automatic-bandwidth-selection-method",
    "title": "Hands-on_Ex03",
    "section": "Computing kernel density estimation using automatic bandwidth selection method",
    "text": "Computing kernel density estimation using automatic bandwidth selection method\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\n\nplot(kde_childcareSG_bw)\n\n\n\n\nTo retrieve the bandwidth used:\n\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n306.6986 \n\n\n###Rescalling KDE values\n\nchildcareSG_ppp.km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\n\n\nkde_childcareSG.bw &lt;- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG.bw)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#working-with-different-automatic-badwidth-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#working-with-different-automatic-badwidth-methods",
    "title": "Hands-on_Ex03",
    "section": "Working with different automatic badwidth methods",
    "text": "Working with different automatic badwidth methods\n\nbw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.543278 \n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.159749 1.396455 \n\n\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.3897114 \n\n\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.3066986 \n\n\nCompare the output of using bw.diggle and bw.ppl methods.\n\nkde_childcareSG.ppl &lt;- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#working-with-different-kernel-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#working-with-different-kernel-methods",
    "title": "Hands-on_Ex03",
    "section": "Working with different kernel methods",
    "text": "Working with different kernel methods\nThree other options, namely: Epanechnikov, Quartic and Dics.\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\n\n\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\n\n\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\n\n\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#computing-kde-by-using-fixed-bandwidth",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#computing-kde-by-using-fixed-bandwidth",
    "title": "Hands-on_Ex03",
    "section": "Computing KDE by using fixed bandwidth",
    "text": "Computing KDE by using fixed bandwidth\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#computing-kde-by-using-adaptive-bandwidth",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#computing-kde-by-using-adaptive-bandwidth",
    "title": "Hands-on_Ex03",
    "section": "Computing KDE by using adaptive bandwidth",
    "text": "Computing KDE by using adaptive bandwidth\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\nComparing the fixed and adaptive kernel density estimation outputs\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#converting-kde-output-into-grid-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#converting-kde-output-into-grid-object",
    "title": "Hands-on_Ex03",
    "section": "Converting KDE output into grid object",
    "text": "Converting KDE output into grid object\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\nConverting gridded output into raster\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\n\n\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -1.014191e-14, 32.45281  (min, max)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#assigning-projection-systems",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#assigning-projection-systems",
    "title": "Hands-on_Ex03",
    "section": "Assigning projection systems",
    "text": "Assigning projection systems\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.014191e-14, 32.45281  (min, max)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#visualising-the-output-in-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#visualising-the-output-in-tmap",
    "title": "Hands-on_Ex03",
    "section": "Visualising the output in tmap",
    "text": "Visualising the output in tmap\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#comparing-spatial-point-patterns-using-kde",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#comparing-spatial-point-patterns-using-kde",
    "title": "Hands-on_Ex03",
    "section": "Comparing Spatial Point Patterns using KDE",
    "text": "Comparing Spatial Point Patterns using KDE\nExtracting study area\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\nPlotting target planning areas\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\nConverting the spatial point data frame into generic sp format\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#creating-owin-object-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#creating-owin-object-1",
    "title": "Hands-on_Ex03",
    "section": "Creating owin object",
    "text": "Creating owin object\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\nCombining childcare points and the study area\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\nRescale() function is used to trasnform the unit of measurement from metre to kilometre.\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#computing-kde",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#computing-kde",
    "title": "Hands-on_Ex03",
    "section": "Computing KDE",
    "text": "Computing KDE\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\n\n\n\n\nComputing fixed bandwidth KDE\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#testing-spatial-point-patterns-using-clark-and-evans-test",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#testing-spatial-point-patterns-using-clark-and-evans-test",
    "title": "Hands-on_Ex03",
    "section": "Testing spatial point patterns using Clark and Evans Test",
    "text": "Testing spatial point patterns using Clark and Evans Test\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.5062, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nClark and Evans Test: Choa Chu Kang planning area\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.85415, p-value = 0.01639\nalternative hypothesis: two-sided\n\n\nClark and Evans Test: Tampines planning area\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.6861, p-value = 8.271e-11\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#analysing-spatial-point-process-using-f-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#analysing-spatial-point-process-using-f-function",
    "title": "Hands-on_Ex03",
    "section": "Analysing Spatial Point Process Using F-Function",
    "text": "Analysing Spatial Point Process Using F-Function\n\nChoa Chu Kang planning area\n\nComputing F-function estimation\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nF_CK.csr &lt;- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(F_CK.csr)\n\n\n\n\n\n\nTampines planning area\n\nComputing F-function estimation\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#analysing-spatial-point-process-using-k-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#analysing-spatial-point-process-using-k-function",
    "title": "Hands-on_Ex03",
    "section": "Analysing Spatial Point Process Using K-Function",
    "text": "Analysing Spatial Point Process Using K-Function\n\nChoa Chu Kang planning area\n\nComputing K-fucntion estimate\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nK_ck.csr &lt;- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\nTampines planning area\n\nComputing K-fucntion estimation\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nK_tm.csr &lt;- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#analysing-spatial-point-process-using-l-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-On_Ex03.html#analysing-spatial-point-process-using-l-function",
    "title": "Hands-on_Ex03",
    "section": "Analysing Spatial Point Process Using L-Function",
    "text": "Analysing Spatial Point Process Using L-Function\n\nChoa Chu Kang planning area\n\nComputing L Fucntion estimation\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nL_ck.csr &lt;- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\nTampines planning area\n\nComputing L-fucntion estimate\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nL_tm.csr &lt;- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse)\n\n\n\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Hands-on_Ex\\Hands-on_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n dplyr::select(1:4, 7, 15)\n\n\n\n\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\n\n\n\n\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\n\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n\n\n\n\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\n\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\n\n\n\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\n\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n\n\n\n\n\n\n\n\n\n\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#getting-started",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#import-shapefile-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#import-shapefile-into-r-environment",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "hunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Hands-on_Ex\\Hands-on_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n dplyr::select(1:4, 7, 15)\n\n\n\n\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation-1",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "wm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\n\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation-morans-i",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation-morans-i",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "moran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\n\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation-gearys-c",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-measures-of-spatial-autocorrelation-gearys-c",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "geary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\n\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#spatial-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#spatial-correlogram",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "MI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#getting-the-data-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#getting-the-data-into-r-environment",
    "title": "Hands-on_Ex06",
    "section": "10.3 Getting the Data Into R Environment",
    "text": "10.3 Getting the Data Into R Environment\n\n10.3.1 Import shapefile into r environment\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Hands-on_Ex\\Hands-on_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n10.3.2 Import csv file into r environment\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n10.3.3 Performing relational join\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\n\n10.3.4 Visualising Regional Development Indicator\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-spatial-autocorrelation",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-spatial-autocorrelation",
    "title": "Hands-on_Ex06",
    "section": "10.4 Global Spatial Autocorrelation",
    "text": "10.4 Global Spatial Autocorrelation\n\n10.4.1 Computing Contiguity Spatial Weights\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\n10.4.2 Row-standardised weights matrix\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n10.4.3 Global Spatial Autocorrelation: Moran’s I\n\n\n10.4.4 Maron’s I test\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n10.4.4.1 Computing Monte Carlo Moran’s I\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n10.4.4.2 Visualising Monte Carlo Moran’s I\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\n10.4.5 Global Spatial Autocorrelation: Geary’s\n\n10.4.5.1 Geary’s C test\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\n10.4.5.2 Computing Monte Carlo Geary’s C\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n10.4.5.3 Visualising the Monte Carlo Geary’s C\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#spatial-correlogram-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#spatial-correlogram-1",
    "title": "Hands-on_Ex06",
    "section": "10.5 Spatial Correlogram",
    "text": "10.5 Spatial Correlogram\n\n10.5.1 Compute Moran’s I correlogram\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n10.5.2 Compute Geary’s C correlogram and plot\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#cluster-and-outlier-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#cluster-and-outlier-analysis",
    "title": "Hands-on_Ex06",
    "section": "10.6 Cluster and Outlier Analysis",
    "text": "10.6 Cluster and Outlier Analysis\n\n10.6.1 Computing local Moran’s I\n\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n10.6.1.2 Mapping local Moran’s I values\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n10.6.1.3 Mapping local Moran’s I p-values\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n10.6.1.4 Mapping both local Moran’s I values and p-values\n\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#creating-a-lisa-cluster-map",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#creating-a-lisa-cluster-map",
    "title": "Hands-on_Ex06",
    "section": "10.7 Creating a LISA Cluster Map",
    "text": "10.7 Creating a LISA Cluster Map\n\n10.7.1 Plotting Moran scatterplot\n\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\n\n10.7.2 Plotting Moran scatterplot with standardised variable\n\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector \n\n\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n10.7.3 Preparing LISA map classes\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\n\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\n\nsignif &lt;- 0.05       \n\n\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\n\nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I &lt;- localMI[,1]   \nsignif &lt;- 0.05       \nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4    \nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n\n10.7.4 Plotting LISA map\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#hot-spot-and-cold-spot-area-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-on_Ex06",
    "section": "10.8 Hot Spot and Cold Spot Area Analysis",
    "text": "10.8 Hot Spot and Cold Spot Area Analysis\n\n10.8.1 Getis and Ord’s G-Statistics\nThe analysis consists of three steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics\n\n\n\n10.8.2 Deriving distance-based weight matrix\n\n10.8.2.1 Deriving the centroid\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n\ncoords &lt;- cbind(longitude, latitude)\n\n\n\n10.8.2.2 Determine the cut-off distance\n\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n\n10.8.2.3 Computing fixed distance weight matrix\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\n\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\n\n10.8.3 Computing adaptive distance weight matrix\n\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#computing-gi-statistics",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#computing-gi-statistics",
    "title": "Hands-on_Ex06",
    "section": "10.9 Computing Gi statistics",
    "text": "10.9 Computing Gi statistics\n\n10.9.1 Gi statistics using fixed distance\n\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\n\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\n\n10.9.2 Mapping Gi values with fixed distance weights\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\n\n10.9.3 Gi statistics using adaptive distance\n\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\n10.9.4 Mapping Gi values with adaptive distance weights\n\ngdppc&lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics and Applications (23-24 T2)\nThis is the course website of IS415 which I study this term. You will find my course work on this website."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "pacman::p_load(arrow, lubridate, tidyverse,maptools, sf, spNetwork, raster, spatstat, tmap)\n\n\n\n\n\n\n#|eval: false\ngrab_df &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\n\n\n\n\n#|eval: false\nroad_data &lt;- st_read(dsn = \"data/malaysia-singapore-brunei-latest-free.shp\", \n                     layer = \"gis_osm_roads_free_1\")\n\nReading layer `gis_osm_roads_free_1' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Take-home_Ex\\Take-home_Ex1\\data\\malaysia-singapore-brunei-latest-free.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1766969 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 99.66041 ymin: 0.8021131 xmax: 119.2601 ymax: 7.514393\nGeodetic CRS:  WGS 84\n\n\nChecking the CRS of road data\n\n#|eval: false\nst_crs(road_data)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nThis is a wrong EPSG code because the correct EPSG code for svy21 should be 3414. Since it indicates that EPSG is 4326, we need to change the EPSG code into 3414.\n\n#|eval: false\nroad_data_3414 &lt;- st_transform(road_data, 3414)\n\n\n#|eval: false\n#plot(road_data_3414)\n\n\n\n\n\nmpsz &lt;- st_read(dsn = \"data/MPSZ-2019\", \n                layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Take-home_Ex\\Take-home_Ex1\\data\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nChecking the Coordination of mpsz_sf\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nThis is a wrong EPSG code because the correct EPSG code for svy21 should be 3414. Since it indicates that EPSG is 4326, we need to change the EPSG code into 3414.\n\nmpsz3414 &lt;- st_transform(mpsz, 3414)\n\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n#|eval: false\n#plot(mpsz3414)\n\n\n#|eval: false\n#plot(st_geometry(mpsz3414))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#loading-of-data",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#loading-of-data",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "#|eval: false\ngrab_df &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\n\n\n\n\n#|eval: false\nroad_data &lt;- st_read(dsn = \"data/malaysia-singapore-brunei-latest-free.shp\", \n                     layer = \"gis_osm_roads_free_1\")\n\nReading layer `gis_osm_roads_free_1' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Take-home_Ex\\Take-home_Ex1\\data\\malaysia-singapore-brunei-latest-free.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1766969 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 99.66041 ymin: 0.8021131 xmax: 119.2601 ymax: 7.514393\nGeodetic CRS:  WGS 84\n\n\nChecking the CRS of road data\n\n#|eval: false\nst_crs(road_data)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nThis is a wrong EPSG code because the correct EPSG code for svy21 should be 3414. Since it indicates that EPSG is 4326, we need to change the EPSG code into 3414.\n\n#|eval: false\nroad_data_3414 &lt;- st_transform(road_data, 3414)\n\n\n#|eval: false\n#plot(road_data_3414)\n\n\n\n\n\nmpsz &lt;- st_read(dsn = \"data/MPSZ-2019\", \n                layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Take-home_Ex\\Take-home_Ex1\\data\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nChecking the Coordination of mpsz_sf\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nThis is a wrong EPSG code because the correct EPSG code for svy21 should be 3414. Since it indicates that EPSG is 4326, we need to change the EPSG code into 3414.\n\nmpsz3414 &lt;- st_transform(mpsz, 3414)\n\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n#|eval: false\n#plot(mpsz3414)\n\n\n#|eval: false\n#plot(st_geometry(mpsz3414))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "pacman::p_load(arrow, lubridate, tidyverse,\n               maptools, sf, spNetwork, \n               raster, spatstat, tmap)\n\n\n\n\n\n\nmpsz &lt;- st_read(dsn = \"data/MPSZ-2019\", \n                layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Take-home_Ex\\Take-home_Ex1\\data\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nmpsz3414 &lt;- st_transform(mpsz, 3414)\n\n\n\n\n\n\nsf_grab_origin_data &lt;- read_rds(\"data/rds/sf_grab_origin_data.rds\")\n\n\nsummary(sf_grab_origin_data)\n\n    trj_id          driving_mode          osname          pingtimestamp      \n Length:28000       Length:28000       Length:28000       Min.   :1.555e+09  \n Class :character   Class :character   Class :character   1st Qu.:1.555e+09  \n Mode  :character   Mode  :character   Mode  :character   Median :1.555e+09  \n                                                          Mean   :1.555e+09  \n                                                          3rd Qu.:1.556e+09  \n                                                          Max.   :1.556e+09  \n                                                                             \n     speed          bearing         accuracy      \n Min.   :-1.00   Min.   :  0.0   Min.   :  1.400  \n 1st Qu.: 6.25   1st Qu.: 90.0   1st Qu.:  3.900  \n Median :11.10   Median :179.0   Median :  6.000  \n Mean   :10.75   Mean   :172.6   Mean   :  7.476  \n 3rd Qu.:15.19   3rd Qu.:256.0   3rd Qu.: 10.000  \n Max.   :31.71   Max.   :359.0   Max.   :547.000  \n                                                  \n  pingtimstamp                    weekday       start_hr          day       \n Min.   :2019-04-08 00:09:40.00   Sun:3983   10     : 2106   17     : 2012  \n 1st Qu.:2019-04-11 08:48:39.50   Mon:3975   9      : 2100   18     : 2008  \n Median :2019-04-15 00:08:50.50   Tue:4008   0      : 1935   12     : 2007  \n Mean   :2019-04-14 21:30:13.19   Wed:4016   1      : 1921   9      : 2004  \n 3rd Qu.:2019-04-18 10:48:07.00   Thu:4008   7      : 1540   16     : 2004  \n Max.   :2019-04-21 23:34:01.00   Fri:4002   8      : 1538   13     : 2004  \n                                  Sat:4008   (Other):16860   (Other):15961  \n          geometry    \n POINT        :28000  \n epsg:3414    :    0  \n +proj=tmer...:    0  \n                      \n                      \n                      \n                      \n\n\n\ntmap_mode('plot')\ntm_shape(sf_grab_origin_data)+\n  tm_dots()\n\n\n\n\n\n\n\nsf_roads_in_sg &lt;- read_rds(\"data/rds/sf_roads_in_sg.rds\")\n\n\n\n\n\nouter_islands &lt;- mpsz3414[grep(\"island\", mpsz3414$PLN_AREA_N, ignore.case = TRUE), ]\nprint(outer_islands)\n\nSimple feature collection with 6 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 8012.578 ymin: 15748.72 xmax: 56396.44 ymax: 46931.6\nProjected CRS: SVY21 / Singapore TM\n                  SUBZONE_N SUBZONE_C            PLN_AREA_N PLN_AREA_C\n4   JURONG ISLAND AND BUKOM    WISZ01       WESTERN ISLANDS         WI\n7                    SUDONG    WISZ03       WESTERN ISLANDS         WI\n8                   SEMAKAU    WISZ02       WESTERN ISLANDS         WI\n9            SOUTHERN GROUP    SISZ02      SOUTHERN ISLANDS         SI\n10                  SENTOSA    SISZ01      SOUTHERN ISLANDS         SI\n304   NORTH-EASTERN ISLANDS    NESZ01 NORTH-EASTERN ISLANDS         NE\n             REGION_N REGION_C                       geometry\n4         WEST REGION       WR MULTIPOLYGON (((14557.7 304...\n7         WEST REGION       WR MULTIPOLYGON (((15772.59 21...\n8         WEST REGION       WR MULTIPOLYGON (((19843.41 21...\n9      CENTRAL REGION       CR MULTIPOLYGON (((30870.53 22...\n10     CENTRAL REGION       CR MULTIPOLYGON (((26879.04 26...\n304 NORTH-EAST REGION      NER MULTIPOLYGON (((52567.44 46...\n\n\n\nmerged_map &lt;- st_union(mpsz3414, outer_islands)\n\n\nmap_without_outer_islands &lt;- st_difference(mpsz3414, st_union(outer_islands))\n\n\nsf_map_without_outer_islands &lt;- st_cast(map_without_outer_islands, \"POLYGON\")\n\n\n\n\n\nTo reduce the data size and focus on one specific area, I will be doing the analysis on Punggol town.\n\n\n\nsg_sf &lt;- sf_map_without_outer_islands %&gt;% \n  st_union()\n\n\nplot(sg_sf)\n\n\ngrab_origin_ppp &lt;- as.ppp(sf_grab_origin_data)\n\n\nsummary(grab_origin_ppp)\n\nMarked planar point pattern:  28000 points\nAverage intensity 2.47621e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    28000 character character \n\nWindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n                    (46180 x 24480 units)\nWindow area = 1130760000 square units\n\n\n\nplot(grab_origin_ppp)\n\n\nsummary(grab_origin_ppp)\n\nMarked planar point pattern:  28000 points\nAverage intensity 2.47621e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    28000 character character \n\nWindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n                    (46180 x 24480 units)\nWindow area = 1130760000 square units\n\n\n\nsg_owin &lt;- as.owin(sg_sf) \nsummary(sg_owin)\n\nWindow: polygonal boundary\n31 separate polygons (29 holes)\n                  vertices         area relative.area\npolygon 1            12458  6.62835e+08      9.98e-01\npolygon 2              285  1.61128e+06      2.43e-03\npolygon 3 (hole)        41 -4.01660e+04     -6.05e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.70e-05\npolygon 5 (hole)         3 -4.14099e-04     -6.23e-13\npolygon 6 (hole)         4 -2.86396e-01     -4.31e-10\npolygon 7 (hole)         3 -1.81439e-04     -2.73e-13\npolygon 8 (hole)         3 -8.68789e-04     -1.31e-12\npolygon 9 (hole)         3 -5.99535e-04     -9.02e-13\npolygon 10 (hole)        3 -3.04561e-04     -4.58e-13\npolygon 11 (hole)        3 -4.46076e-04     -6.71e-13\npolygon 12 (hole)        3 -3.39794e-04     -5.11e-13\npolygon 13 (hole)        3 -4.52043e-05     -6.80e-14\npolygon 14 (hole)        3 -3.90173e-05     -5.87e-14\npolygon 15 (hole)        3 -9.59850e-05     -1.44e-13\npolygon 16 (hole)        4 -2.54488e-04     -3.83e-13\npolygon 17 (hole)        4 -4.28453e-01     -6.45e-10\npolygon 18 (hole)        4 -2.18616e-04     -3.29e-13\npolygon 19 (hole)        5 -2.44411e-04     -3.68e-13\npolygon 20 (hole)        5 -3.64686e-02     -5.49e-11\npolygon 21 (hole)        6 -8.37554e-01     -1.26e-09\npolygon 22 (hole)       38 -7.79904e+03     -1.17e-05\npolygon 23 (hole)        3 -3.41897e-05     -5.15e-14\npolygon 24 (hole)        3 -3.65499e-03     -5.50e-12\npolygon 25 (hole)        3 -4.95057e-02     -7.45e-11\npolygon 26 (hole)        5 -2.92235e-04     -4.40e-13\npolygon 27 (hole)        3 -7.43616e-06     -1.12e-14\npolygon 28 (hole)      270 -1.21455e+03     -1.83e-06\npolygon 29 (hole)       19 -4.39650e+00     -6.62e-09\npolygon 30 (hole)       35 -1.38385e+02     -2.08e-07\npolygon 31 (hole)       23 -1.99656e+01     -3.01e-08\nenclosing rectangle: [2667.54, 50284.23] x [21448.47, 50256.33] units\n                     (47620 x 28810 units)\nWindow area = 664346000 square units\nFraction of frame area: 0.484\n\n\n\nsg_grab_origin_ppp = grab_origin_ppp[sg_owin]\nsummary(sg_grab_origin_ppp)\n\nMarked planar point pattern:  27875 points\nAverage intensity 4.195855e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    27875 character character \n\nWindow: polygonal boundary\n31 separate polygons (29 holes)\n                  vertices         area relative.area\npolygon 1            12458  6.62835e+08      9.98e-01\npolygon 2              285  1.61128e+06      2.43e-03\npolygon 3 (hole)        41 -4.01660e+04     -6.05e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.70e-05\npolygon 5 (hole)         3 -4.14099e-04     -6.23e-13\npolygon 6 (hole)         4 -2.86396e-01     -4.31e-10\npolygon 7 (hole)         3 -1.81439e-04     -2.73e-13\npolygon 8 (hole)         3 -8.68789e-04     -1.31e-12\npolygon 9 (hole)         3 -5.99535e-04     -9.02e-13\npolygon 10 (hole)        3 -3.04561e-04     -4.58e-13\npolygon 11 (hole)        3 -4.46076e-04     -6.71e-13\npolygon 12 (hole)        3 -3.39794e-04     -5.11e-13\npolygon 13 (hole)        3 -4.52043e-05     -6.80e-14\npolygon 14 (hole)        3 -3.90173e-05     -5.87e-14\npolygon 15 (hole)        3 -9.59850e-05     -1.44e-13\npolygon 16 (hole)        4 -2.54488e-04     -3.83e-13\npolygon 17 (hole)        4 -4.28453e-01     -6.45e-10\npolygon 18 (hole)        4 -2.18616e-04     -3.29e-13\npolygon 19 (hole)        5 -2.44411e-04     -3.68e-13\npolygon 20 (hole)        5 -3.64686e-02     -5.49e-11\npolygon 21 (hole)        6 -8.37554e-01     -1.26e-09\npolygon 22 (hole)       38 -7.79904e+03     -1.17e-05\npolygon 23 (hole)        3 -3.41897e-05     -5.15e-14\npolygon 24 (hole)        3 -3.65499e-03     -5.50e-12\npolygon 25 (hole)        3 -4.95057e-02     -7.45e-11\npolygon 26 (hole)        5 -2.92235e-04     -4.40e-13\npolygon 27 (hole)        3 -7.43616e-06     -1.12e-14\npolygon 28 (hole)      270 -1.21455e+03     -1.83e-06\npolygon 29 (hole)       19 -4.39650e+00     -6.62e-09\npolygon 30 (hole)       35 -1.38385e+02     -2.08e-07\npolygon 31 (hole)       23 -1.99656e+01     -3.01e-08\nenclosing rectangle: [2667.54, 50284.23] x [21448.47, 50256.33] units\n                     (47620 x 28810 units)\nWindow area = 664346000 square units\nFraction of frame area: 0.484\n\n\n\nplot(sg_grab_origin_ppp)\n\n\nkde_grab_bw &lt;- density(sg_grab_origin_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\n\nplot(kde_grab_bw)\n\n\n\n\n\n\n\n\n\npg &lt;- mpsz3414 %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\n\n\nplot(st_geometry(pg, main = \"Punggol\"))\n\n\n\n\n\nroads_in_punggol &lt;- st_intersection(sf_roads_in_sg, pg)\n\n\nwrite_rds(roads_in_punggol, \"data/rds/roads_in_punggol.rds\")\n\n\nroads_in_punggol &lt;- read_rds(\"data/rds/roads_in_punggol.rds\")\n\n\nplot(st_geometry(roads_in_punggol))\n\n\n\n\n\ngrab_in_punggol &lt;- st_intersection(sf_grab_origin_data, pg)\n\n\nwrite_rds(grab_in_punggol, \"data/rds/grab_in_punggol.rds\")\n\n\ngrab_in_punggol &lt;- read_rds(\"data/rds/grab_in_punggol.rds\")\n\n\nplot(st_geometry(grab_in_punggol))\n\n\n\n\n\n#grab_road_in_pg &lt;- st_intersection(sf_roads_in_sg,grab_in_punggol)\n\n\n#grab_road_in_pg &lt;- st_intersection(grab_in_punggol, roads_in_punggol)\n\n\n#plot(grab_road_in_pg)\n\n\n#grab_road_in_pg &lt;- grab_road_in_pg[st_is_empty(grab_road_in_pg$geometry) == FALSE, ]\n\n\ntmap_mode('plot')\ntm_shape(roads_in_punggol, geometry_type = \"lines\") + \n  tm_lines()\n\n\n\n\n\ntmap_mode('plot')\n\n# Plot roads\ntm_shape(roads_in_punggol, geometry_type = \"lines\") + \n  tm_lines(lwd = 1, col = \"blue\") +\n  \n  # Plot Punggol area boundary\n  tm_shape(pg) +\n  tm_borders() +\n  \n  # Plot Grab origin data\n  tm_shape(grab_in_punggol) +\n  tm_dots()\n\n\n\n\n\nroads_lines &lt;- roads_in_punggol[st_geometry_type(roads_in_punggol) == \"LINESTRING\", ]\n\n# Apply lixelize_lines with mindist\nlixels &lt;- lixelize_lines(roads_lines,5000, mindist = 2500)\n\n\nsamples &lt;- lines_center(lixels)\n\n\ndensities &lt;- nkde(roads_lines, \n                  events = grab_in_punggol,\n                  w = rep(1,nrow(grab_in_punggol)),\n                  samples = samples,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\nsamples$density &lt;- densities\nlixels$density &lt;- densities\n\n\n# rescaling to help the mapping\nsamples$density &lt;- samples$density*1000\nlixels$density &lt;- lixels$density*1000\n\n\ntmap_mode('view')\ntm_shape(lixels)+\n  tm_lines(col=\"density\")+\ntm_shape(grab_in_punggol)+\n  tm_dots()\n\n\n\n\n\n\n\n\n\nFrom the density map above, it shows that the crossroads has the highest density among the all other roads. Those are popular pick-up points. This also shows a behaviour of passengers are more likely to take their ride in main streets. This implies that more grab cars will pass by the main streets as well."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#loading-of-data",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#loading-of-data",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "mpsz &lt;- st_read(dsn = \"data/MPSZ-2019\", \n                layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Take-home_Ex\\Take-home_Ex1\\data\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nmpsz3414 &lt;- st_transform(mpsz, 3414)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#extracting-geospatial-data-layer",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#extracting-geospatial-data-layer",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "sf_grab_origin_data &lt;- read_rds(\"data/rds/sf_grab_origin_data.rds\")\n\n\nsummary(sf_grab_origin_data)\n\n    trj_id          driving_mode          osname          pingtimestamp      \n Length:28000       Length:28000       Length:28000       Min.   :1.555e+09  \n Class :character   Class :character   Class :character   1st Qu.:1.555e+09  \n Mode  :character   Mode  :character   Mode  :character   Median :1.555e+09  \n                                                          Mean   :1.555e+09  \n                                                          3rd Qu.:1.556e+09  \n                                                          Max.   :1.556e+09  \n                                                                             \n     speed          bearing         accuracy      \n Min.   :-1.00   Min.   :  0.0   Min.   :  1.400  \n 1st Qu.: 6.25   1st Qu.: 90.0   1st Qu.:  3.900  \n Median :11.10   Median :179.0   Median :  6.000  \n Mean   :10.75   Mean   :172.6   Mean   :  7.476  \n 3rd Qu.:15.19   3rd Qu.:256.0   3rd Qu.: 10.000  \n Max.   :31.71   Max.   :359.0   Max.   :547.000  \n                                                  \n  pingtimstamp                    weekday       start_hr          day       \n Min.   :2019-04-08 00:09:40.00   Sun:3983   10     : 2106   17     : 2012  \n 1st Qu.:2019-04-11 08:48:39.50   Mon:3975   9      : 2100   18     : 2008  \n Median :2019-04-15 00:08:50.50   Tue:4008   0      : 1935   12     : 2007  \n Mean   :2019-04-14 21:30:13.19   Wed:4016   1      : 1921   9      : 2004  \n 3rd Qu.:2019-04-18 10:48:07.00   Thu:4008   7      : 1540   16     : 2004  \n Max.   :2019-04-21 23:34:01.00   Fri:4002   8      : 1538   13     : 2004  \n                                  Sat:4008   (Other):16860   (Other):15961  \n          geometry    \n POINT        :28000  \n epsg:3414    :    0  \n +proj=tmer...:    0  \n                      \n                      \n                      \n                      \n\n\n\ntmap_mode('plot')\ntm_shape(sf_grab_origin_data)+\n  tm_dots()\n\n\n\n\n\n\n\nsf_roads_in_sg &lt;- read_rds(\"data/rds/sf_roads_in_sg.rds\")\n\n\n\n\n\nouter_islands &lt;- mpsz3414[grep(\"island\", mpsz3414$PLN_AREA_N, ignore.case = TRUE), ]\nprint(outer_islands)\n\nSimple feature collection with 6 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 8012.578 ymin: 15748.72 xmax: 56396.44 ymax: 46931.6\nProjected CRS: SVY21 / Singapore TM\n                  SUBZONE_N SUBZONE_C            PLN_AREA_N PLN_AREA_C\n4   JURONG ISLAND AND BUKOM    WISZ01       WESTERN ISLANDS         WI\n7                    SUDONG    WISZ03       WESTERN ISLANDS         WI\n8                   SEMAKAU    WISZ02       WESTERN ISLANDS         WI\n9            SOUTHERN GROUP    SISZ02      SOUTHERN ISLANDS         SI\n10                  SENTOSA    SISZ01      SOUTHERN ISLANDS         SI\n304   NORTH-EASTERN ISLANDS    NESZ01 NORTH-EASTERN ISLANDS         NE\n             REGION_N REGION_C                       geometry\n4         WEST REGION       WR MULTIPOLYGON (((14557.7 304...\n7         WEST REGION       WR MULTIPOLYGON (((15772.59 21...\n8         WEST REGION       WR MULTIPOLYGON (((19843.41 21...\n9      CENTRAL REGION       CR MULTIPOLYGON (((30870.53 22...\n10     CENTRAL REGION       CR MULTIPOLYGON (((26879.04 26...\n304 NORTH-EAST REGION      NER MULTIPOLYGON (((52567.44 46...\n\n\n\nmerged_map &lt;- st_union(mpsz3414, outer_islands)\n\n\nmap_without_outer_islands &lt;- st_difference(mpsz3414, st_union(outer_islands))\n\n\nsf_map_without_outer_islands &lt;- st_cast(map_without_outer_islands, \"POLYGON\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#traditional-kernel-density-estimation-layers",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#traditional-kernel-density-estimation-layers",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "To reduce the data size and focus on one specific area, I will be doing the analysis on Punggol town.\n\n\n\nsg_sf &lt;- sf_map_without_outer_islands %&gt;% \n  st_union()\n\n\nplot(sg_sf)\n\n\ngrab_origin_ppp &lt;- as.ppp(sf_grab_origin_data)\n\n\nsummary(grab_origin_ppp)\n\nMarked planar point pattern:  28000 points\nAverage intensity 2.47621e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    28000 character character \n\nWindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n                    (46180 x 24480 units)\nWindow area = 1130760000 square units\n\n\n\nplot(grab_origin_ppp)\n\n\nsummary(grab_origin_ppp)\n\nMarked planar point pattern:  28000 points\nAverage intensity 2.47621e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    28000 character character \n\nWindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n                    (46180 x 24480 units)\nWindow area = 1130760000 square units\n\n\n\nsg_owin &lt;- as.owin(sg_sf) \nsummary(sg_owin)\n\nWindow: polygonal boundary\n31 separate polygons (29 holes)\n                  vertices         area relative.area\npolygon 1            12458  6.62835e+08      9.98e-01\npolygon 2              285  1.61128e+06      2.43e-03\npolygon 3 (hole)        41 -4.01660e+04     -6.05e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.70e-05\npolygon 5 (hole)         3 -4.14099e-04     -6.23e-13\npolygon 6 (hole)         4 -2.86396e-01     -4.31e-10\npolygon 7 (hole)         3 -1.81439e-04     -2.73e-13\npolygon 8 (hole)         3 -8.68789e-04     -1.31e-12\npolygon 9 (hole)         3 -5.99535e-04     -9.02e-13\npolygon 10 (hole)        3 -3.04561e-04     -4.58e-13\npolygon 11 (hole)        3 -4.46076e-04     -6.71e-13\npolygon 12 (hole)        3 -3.39794e-04     -5.11e-13\npolygon 13 (hole)        3 -4.52043e-05     -6.80e-14\npolygon 14 (hole)        3 -3.90173e-05     -5.87e-14\npolygon 15 (hole)        3 -9.59850e-05     -1.44e-13\npolygon 16 (hole)        4 -2.54488e-04     -3.83e-13\npolygon 17 (hole)        4 -4.28453e-01     -6.45e-10\npolygon 18 (hole)        4 -2.18616e-04     -3.29e-13\npolygon 19 (hole)        5 -2.44411e-04     -3.68e-13\npolygon 20 (hole)        5 -3.64686e-02     -5.49e-11\npolygon 21 (hole)        6 -8.37554e-01     -1.26e-09\npolygon 22 (hole)       38 -7.79904e+03     -1.17e-05\npolygon 23 (hole)        3 -3.41897e-05     -5.15e-14\npolygon 24 (hole)        3 -3.65499e-03     -5.50e-12\npolygon 25 (hole)        3 -4.95057e-02     -7.45e-11\npolygon 26 (hole)        5 -2.92235e-04     -4.40e-13\npolygon 27 (hole)        3 -7.43616e-06     -1.12e-14\npolygon 28 (hole)      270 -1.21455e+03     -1.83e-06\npolygon 29 (hole)       19 -4.39650e+00     -6.62e-09\npolygon 30 (hole)       35 -1.38385e+02     -2.08e-07\npolygon 31 (hole)       23 -1.99656e+01     -3.01e-08\nenclosing rectangle: [2667.54, 50284.23] x [21448.47, 50256.33] units\n                     (47620 x 28810 units)\nWindow area = 664346000 square units\nFraction of frame area: 0.484\n\n\n\nsg_grab_origin_ppp = grab_origin_ppp[sg_owin]\nsummary(sg_grab_origin_ppp)\n\nMarked planar point pattern:  27875 points\nAverage intensity 4.195855e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    27875 character character \n\nWindow: polygonal boundary\n31 separate polygons (29 holes)\n                  vertices         area relative.area\npolygon 1            12458  6.62835e+08      9.98e-01\npolygon 2              285  1.61128e+06      2.43e-03\npolygon 3 (hole)        41 -4.01660e+04     -6.05e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.70e-05\npolygon 5 (hole)         3 -4.14099e-04     -6.23e-13\npolygon 6 (hole)         4 -2.86396e-01     -4.31e-10\npolygon 7 (hole)         3 -1.81439e-04     -2.73e-13\npolygon 8 (hole)         3 -8.68789e-04     -1.31e-12\npolygon 9 (hole)         3 -5.99535e-04     -9.02e-13\npolygon 10 (hole)        3 -3.04561e-04     -4.58e-13\npolygon 11 (hole)        3 -4.46076e-04     -6.71e-13\npolygon 12 (hole)        3 -3.39794e-04     -5.11e-13\npolygon 13 (hole)        3 -4.52043e-05     -6.80e-14\npolygon 14 (hole)        3 -3.90173e-05     -5.87e-14\npolygon 15 (hole)        3 -9.59850e-05     -1.44e-13\npolygon 16 (hole)        4 -2.54488e-04     -3.83e-13\npolygon 17 (hole)        4 -4.28453e-01     -6.45e-10\npolygon 18 (hole)        4 -2.18616e-04     -3.29e-13\npolygon 19 (hole)        5 -2.44411e-04     -3.68e-13\npolygon 20 (hole)        5 -3.64686e-02     -5.49e-11\npolygon 21 (hole)        6 -8.37554e-01     -1.26e-09\npolygon 22 (hole)       38 -7.79904e+03     -1.17e-05\npolygon 23 (hole)        3 -3.41897e-05     -5.15e-14\npolygon 24 (hole)        3 -3.65499e-03     -5.50e-12\npolygon 25 (hole)        3 -4.95057e-02     -7.45e-11\npolygon 26 (hole)        5 -2.92235e-04     -4.40e-13\npolygon 27 (hole)        3 -7.43616e-06     -1.12e-14\npolygon 28 (hole)      270 -1.21455e+03     -1.83e-06\npolygon 29 (hole)       19 -4.39650e+00     -6.62e-09\npolygon 30 (hole)       35 -1.38385e+02     -2.08e-07\npolygon 31 (hole)       23 -1.99656e+01     -3.01e-08\nenclosing rectangle: [2667.54, 50284.23] x [21448.47, 50256.33] units\n                     (47620 x 28810 units)\nWindow area = 664346000 square units\nFraction of frame area: 0.484\n\n\n\nplot(sg_grab_origin_ppp)\n\n\nkde_grab_bw &lt;- density(sg_grab_origin_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\n\nplot(kde_grab_bw)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#network-kernel-density-estimation-nkde-or-temporal-network-kernel-density-estimation-tnkde",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#network-kernel-density-estimation-nkde-or-temporal-network-kernel-density-estimation-tnkde",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "pg &lt;- mpsz3414 %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\n\n\nplot(st_geometry(pg, main = \"Punggol\"))\n\n\n\n\n\nroads_in_punggol &lt;- st_intersection(sf_roads_in_sg, pg)\n\n\nwrite_rds(roads_in_punggol, \"data/rds/roads_in_punggol.rds\")\n\n\nroads_in_punggol &lt;- read_rds(\"data/rds/roads_in_punggol.rds\")\n\n\nplot(st_geometry(roads_in_punggol))\n\n\n\n\n\ngrab_in_punggol &lt;- st_intersection(sf_grab_origin_data, pg)\n\n\nwrite_rds(grab_in_punggol, \"data/rds/grab_in_punggol.rds\")\n\n\ngrab_in_punggol &lt;- read_rds(\"data/rds/grab_in_punggol.rds\")\n\n\nplot(st_geometry(grab_in_punggol))\n\n\n\n\n\n#grab_road_in_pg &lt;- st_intersection(sf_roads_in_sg,grab_in_punggol)\n\n\n#grab_road_in_pg &lt;- st_intersection(grab_in_punggol, roads_in_punggol)\n\n\n#plot(grab_road_in_pg)\n\n\n#grab_road_in_pg &lt;- grab_road_in_pg[st_is_empty(grab_road_in_pg$geometry) == FALSE, ]\n\n\ntmap_mode('plot')\ntm_shape(roads_in_punggol, geometry_type = \"lines\") + \n  tm_lines()\n\n\n\n\n\ntmap_mode('plot')\n\n# Plot roads\ntm_shape(roads_in_punggol, geometry_type = \"lines\") + \n  tm_lines(lwd = 1, col = \"blue\") +\n  \n  # Plot Punggol area boundary\n  tm_shape(pg) +\n  tm_borders() +\n  \n  # Plot Grab origin data\n  tm_shape(grab_in_punggol) +\n  tm_dots()\n\n\n\n\n\nroads_lines &lt;- roads_in_punggol[st_geometry_type(roads_in_punggol) == \"LINESTRING\", ]\n\n# Apply lixelize_lines with mindist\nlixels &lt;- lixelize_lines(roads_lines,5000, mindist = 2500)\n\n\nsamples &lt;- lines_center(lixels)\n\n\ndensities &lt;- nkde(roads_lines, \n                  events = grab_in_punggol,\n                  w = rep(1,nrow(grab_in_punggol)),\n                  samples = samples,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\nsamples$density &lt;- densities\nlixels$density &lt;- densities\n\n\n# rescaling to help the mapping\nsamples$density &lt;- samples$density*1000\nlixels$density &lt;- lixels$density*1000\n\n\ntmap_mode('view')\ntm_shape(lixels)+\n  tm_lines(col=\"density\")+\ntm_shape(grab_in_punggol)+\n  tm_dots()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#kernel-density-layers-on-openstreetmap-of-singapore-using-tmap",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#kernel-density-layers-on-openstreetmap-of-singapore-using-tmap",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "tmap_mode('view')\n\n# Plot roads\ntm_shape(roads_in_punggol, geometry_type = \"lines\") + \n  tm_lines(lwd = 1, col = \"blue\") +\n  \n  # Plot Punggol area boundary\n  tm_shape(pg) +\n  tm_borders() +\n  \n  # Plot Grab origin data\n  tm_shape(grab_in_punggol) +\n  tm_dots()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#describe-the-spatial-patterns-revealed-by-the-kernel-density-maps",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-KDE.html#describe-the-spatial-patterns-revealed-by-the-kernel-density-maps",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "From the density map above, it shows that the crossroads has the highest density among the all other roads. Those are popular pick-up points. This also shows a behaviour of passengers are more likely to take their ride in main streets. This implies that more grab cars will pass by the main streets as well."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-DataPrep.html",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-DataPrep.html",
    "title": "Take-home Exercise 1: Data Preparation",
    "section": "",
    "text": "pacman::p_load(arrow, lubridate, tidyverse,maptools, sf, spNetwork, raster, spatstat, tmap)\n\n\n\n\n\n\ngrab_df &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\n\n\n\n\nroad_data &lt;- st_read(dsn = \"data/malaysia-singapore-brunei-latest-free.shp\", \n                     layer = \"gis_osm_roads_free_1\")\n\nChecking the CRS of road data\n\nst_crs(road_data)\n\nThis is a wrong EPSG code because the correct EPSG code for svy21 should be 3414. Since it indicates that EPSG is 4326, we need to change the EPSG code into 3414.\n\nroad_data_3414 &lt;- st_transform(road_data, 3414)\n\n\nplot(road_data_3414)\n\n\n\n\n\nmpsz &lt;- st_read(dsn = \"data/MPSZ-2019\", \n                layer = \"MPSZ-2019\")\n\nChecking the Coordination of mpsz_sf\n\nst_crs(mpsz)\n\nThis is a wrong EPSG code because the correct EPSG code for svy21 should be 3414. Since it indicates that EPSG is 4326, we need to change the EPSG code into 3414.\n\nmpsz3414 &lt;- st_transform(mpsz, 3414)\n\n\nst_crs(mpsz3414)\n\n\nwrite_rds(mpsz3414, \"data/rds/mpsz3414.rds\")\n\n\nmpsz3414 &lt;- read_rds(\"data/rds/mpsz3414.rds\")\n\n\nplot(st_geometry(mpsz3414))\n\n\n\n\n\n\n\n\n\n\n\ngrab_df$pingtimstamp &lt;- as_datetime(grab_df$pingtimestamp)\n\n\ngrab_origin &lt;- grab_df %&gt;% \n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimstamp,\n                        label = TRUE,\n                        abbr = TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n\n\n\n\n\nsf_grab_origin_data &lt;- st_as_sf(grab_origin, \n                                coords = c(\"rawlng\",\"rawlat\"), \n                                crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\n\nwrite_rds(sf_grab_origin_data, \"data/rds/sf_grab_origin_data.rds\")\n\n\nsf_grab_origin_data &lt;- read_rds(\"data/rds/sf_grab_origin_data.rds\")\n\n\nsummary(sf_grab_origin_data)\n\n    trj_id          driving_mode          osname          pingtimestamp      \n Length:28000       Length:28000       Length:28000       Min.   :1.555e+09  \n Class :character   Class :character   Class :character   1st Qu.:1.555e+09  \n Mode  :character   Mode  :character   Mode  :character   Median :1.555e+09  \n                                                          Mean   :1.555e+09  \n                                                          3rd Qu.:1.556e+09  \n                                                          Max.   :1.556e+09  \n                                                                             \n     speed          bearing         accuracy      \n Min.   :-1.00   Min.   :  0.0   Min.   :  1.400  \n 1st Qu.: 6.25   1st Qu.: 90.0   1st Qu.:  3.900  \n Median :11.10   Median :179.0   Median :  6.000  \n Mean   :10.75   Mean   :172.6   Mean   :  7.476  \n 3rd Qu.:15.19   3rd Qu.:256.0   3rd Qu.: 10.000  \n Max.   :31.71   Max.   :359.0   Max.   :547.000  \n                                                  \n  pingtimstamp                    weekday       start_hr          day       \n Min.   :2019-04-08 00:09:40.00   Sun:3983   10     : 2106   17     : 2012  \n 1st Qu.:2019-04-11 08:48:39.50   Mon:3975   9      : 2100   18     : 2008  \n Median :2019-04-15 00:08:50.50   Tue:4008   0      : 1935   12     : 2007  \n Mean   :2019-04-14 21:30:13.19   Wed:4016   1      : 1921   9      : 2004  \n 3rd Qu.:2019-04-18 10:48:07.00   Thu:4008   7      : 1540   16     : 2004  \n Max.   :2019-04-21 23:34:01.00   Fri:4002   8      : 1538   13     : 2004  \n                                  Sat:4008   (Other):16860   (Other):15961  \n          geometry    \n POINT        :28000  \n epsg:3414    :    0  \n +proj=tmer...:    0  \n                      \n                      \n                      \n                      \n\n\n\ntmap_mode('plot')\ntm_shape(sf_grab_origin_data)+\n  tm_dots()\n\n\n\n\n\n\n\n\nouter_islands &lt;- mpsz3414[grep(\"island\", mpsz3414$PLN_AREA_N, ignore.case = TRUE), ] \n#print(outer_islands) \n\n\n#plot(outer_islands)\n\n\nmerged_map &lt;- st_union(mpsz3414, outer_islands)\n\n\nmap_without_outer_islands &lt;- st_difference(mpsz3414, st_union(outer_islands))\n\n\n#plot(map_without_outer_islands)\n\n\nsf_map_without_outer_islands &lt;- st_cast(map_without_outer_islands, \"POLYGON\")\n\n\n\n\n\nroads_in_singapore &lt;- st_intersection(road_data_3414, map_without_outer_islands)\n\n\nsf_roads_in_sg &lt;- st_cast(roads_in_singapore, \"LINESTRING\")\n\n\nwrite_rds(sf_roads_in_sg, \"data/rds/sf_roads_in_sg.rds\")\n\n\nsf_roads_in_sg &lt;- read_rds(\"data/rds/sf_roads_in_sg.rds\")\n\n\n#plot(map_without_outer_islands$geometry, main = \"Roads in Singapore\")\n#plot(roads_in_singapore$geometry, add = TRUE, col = \"red\")\n\n\n\n\n\nTo reduce the data size and focus on one specific area, I will be doing the analysis on Punggol town.\n\n\n\nsg_sf &lt;- sf_map_without_outer_islands %&gt;%    \n  st_union()\n\n\nplot(sg_sf)\n\n\ngrab_origin_ppp &lt;- as.ppp(sf_grab_origin_data)\n\n\nsummary(grab_origin_ppp)\n\nMarked planar point pattern:  28000 points\nAverage intensity 2.47621e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    28000 character character \n\nWindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n                    (46180 x 24480 units)\nWindow area = 1130760000 square units\n\n\n\nplot(grab_origin_ppp)\n\n\nsummary(grab_origin_ppp)\n\nMarked planar point pattern:  28000 points\nAverage intensity 2.47621e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    28000 character character \n\nWindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n                    (46180 x 24480 units)\nWindow area = 1130760000 square units\n\n\n\nsg_owin &lt;- as.owin(sg_sf)  \nsummary(sg_owin)\n\nWindow: polygonal boundary\n31 separate polygons (29 holes)\n                  vertices         area relative.area\npolygon 1            12458  6.62835e+08      9.98e-01\npolygon 2              285  1.61128e+06      2.43e-03\npolygon 3 (hole)        41 -4.01660e+04     -6.05e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.70e-05\npolygon 5 (hole)         3 -4.14099e-04     -6.23e-13\npolygon 6 (hole)         4 -2.86396e-01     -4.31e-10\npolygon 7 (hole)         3 -1.81439e-04     -2.73e-13\npolygon 8 (hole)         3 -8.68789e-04     -1.31e-12\npolygon 9 (hole)         3 -5.99535e-04     -9.02e-13\npolygon 10 (hole)        3 -3.04561e-04     -4.58e-13\npolygon 11 (hole)        3 -4.46076e-04     -6.71e-13\npolygon 12 (hole)        3 -3.39794e-04     -5.11e-13\npolygon 13 (hole)        3 -4.52043e-05     -6.80e-14\npolygon 14 (hole)        3 -3.90173e-05     -5.87e-14\npolygon 15 (hole)        3 -9.59850e-05     -1.44e-13\npolygon 16 (hole)        4 -2.54488e-04     -3.83e-13\npolygon 17 (hole)        4 -4.28453e-01     -6.45e-10\npolygon 18 (hole)        4 -2.18616e-04     -3.29e-13\npolygon 19 (hole)        5 -2.44411e-04     -3.68e-13\npolygon 20 (hole)        5 -3.64686e-02     -5.49e-11\npolygon 21 (hole)        6 -8.37554e-01     -1.26e-09\npolygon 22 (hole)       38 -7.79904e+03     -1.17e-05\npolygon 23 (hole)        3 -3.41897e-05     -5.15e-14\npolygon 24 (hole)        3 -3.65499e-03     -5.50e-12\npolygon 25 (hole)        3 -4.95057e-02     -7.45e-11\npolygon 26 (hole)        5 -2.92235e-04     -4.40e-13\npolygon 27 (hole)        3 -7.43616e-06     -1.12e-14\npolygon 28 (hole)      270 -1.21455e+03     -1.83e-06\npolygon 29 (hole)       19 -4.39650e+00     -6.62e-09\npolygon 30 (hole)       35 -1.38385e+02     -2.08e-07\npolygon 31 (hole)       23 -1.99656e+01     -3.01e-08\nenclosing rectangle: [2667.54, 50284.23] x [21448.47, 50256.33] units\n                     (47620 x 28810 units)\nWindow area = 664346000 square units\nFraction of frame area: 0.484\n\n\n\nsg_grab_origin_ppp = grab_origin_ppp[sg_owin] \nsummary(sg_grab_origin_ppp)\n\nMarked planar point pattern:  27875 points\nAverage intensity 4.195855e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    27875 character character \n\nWindow: polygonal boundary\n31 separate polygons (29 holes)\n                  vertices         area relative.area\npolygon 1            12458  6.62835e+08      9.98e-01\npolygon 2              285  1.61128e+06      2.43e-03\npolygon 3 (hole)        41 -4.01660e+04     -6.05e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.70e-05\npolygon 5 (hole)         3 -4.14099e-04     -6.23e-13\npolygon 6 (hole)         4 -2.86396e-01     -4.31e-10\npolygon 7 (hole)         3 -1.81439e-04     -2.73e-13\npolygon 8 (hole)         3 -8.68789e-04     -1.31e-12\npolygon 9 (hole)         3 -5.99535e-04     -9.02e-13\npolygon 10 (hole)        3 -3.04561e-04     -4.58e-13\npolygon 11 (hole)        3 -4.46076e-04     -6.71e-13\npolygon 12 (hole)        3 -3.39794e-04     -5.11e-13\npolygon 13 (hole)        3 -4.52043e-05     -6.80e-14\npolygon 14 (hole)        3 -3.90173e-05     -5.87e-14\npolygon 15 (hole)        3 -9.59850e-05     -1.44e-13\npolygon 16 (hole)        4 -2.54488e-04     -3.83e-13\npolygon 17 (hole)        4 -4.28453e-01     -6.45e-10\npolygon 18 (hole)        4 -2.18616e-04     -3.29e-13\npolygon 19 (hole)        5 -2.44411e-04     -3.68e-13\npolygon 20 (hole)        5 -3.64686e-02     -5.49e-11\npolygon 21 (hole)        6 -8.37554e-01     -1.26e-09\npolygon 22 (hole)       38 -7.79904e+03     -1.17e-05\npolygon 23 (hole)        3 -3.41897e-05     -5.15e-14\npolygon 24 (hole)        3 -3.65499e-03     -5.50e-12\npolygon 25 (hole)        3 -4.95057e-02     -7.45e-11\npolygon 26 (hole)        5 -2.92235e-04     -4.40e-13\npolygon 27 (hole)        3 -7.43616e-06     -1.12e-14\npolygon 28 (hole)      270 -1.21455e+03     -1.83e-06\npolygon 29 (hole)       19 -4.39650e+00     -6.62e-09\npolygon 30 (hole)       35 -1.38385e+02     -2.08e-07\npolygon 31 (hole)       23 -1.99656e+01     -3.01e-08\nenclosing rectangle: [2667.54, 50284.23] x [21448.47, 50256.33] units\n                     (47620 x 28810 units)\nWindow area = 664346000 square units\nFraction of frame area: 0.484\n\n\n\nplot(sg_grab_origin_ppp)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-DataPrep.html#loading-of-data",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-DataPrep.html#loading-of-data",
    "title": "Take-home Exercise 1: Data Preparation",
    "section": "",
    "text": "grab_df &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\n\n\n\n\nroad_data &lt;- st_read(dsn = \"data/malaysia-singapore-brunei-latest-free.shp\", \n                     layer = \"gis_osm_roads_free_1\")\n\nChecking the CRS of road data\n\nst_crs(road_data)\n\nThis is a wrong EPSG code because the correct EPSG code for svy21 should be 3414. Since it indicates that EPSG is 4326, we need to change the EPSG code into 3414.\n\nroad_data_3414 &lt;- st_transform(road_data, 3414)\n\n\nplot(road_data_3414)\n\n\n\n\n\nmpsz &lt;- st_read(dsn = \"data/MPSZ-2019\", \n                layer = \"MPSZ-2019\")\n\nChecking the Coordination of mpsz_sf\n\nst_crs(mpsz)\n\nThis is a wrong EPSG code because the correct EPSG code for svy21 should be 3414. Since it indicates that EPSG is 4326, we need to change the EPSG code into 3414.\n\nmpsz3414 &lt;- st_transform(mpsz, 3414)\n\n\nst_crs(mpsz3414)\n\n\nwrite_rds(mpsz3414, \"data/rds/mpsz3414.rds\")\n\n\nmpsz3414 &lt;- read_rds(\"data/rds/mpsz3414.rds\")\n\n\nplot(st_geometry(mpsz3414))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-DataPrep.html#extracting-geospatial-data-layer",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-DataPrep.html#extracting-geospatial-data-layer",
    "title": "Take-home Exercise 1: Data Preparation",
    "section": "",
    "text": "grab_df$pingtimstamp &lt;- as_datetime(grab_df$pingtimestamp)\n\n\ngrab_origin &lt;- grab_df %&gt;% \n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimstamp,\n                        label = TRUE,\n                        abbr = TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n\n\n\n\n\nsf_grab_origin_data &lt;- st_as_sf(grab_origin, \n                                coords = c(\"rawlng\",\"rawlat\"), \n                                crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\n\nwrite_rds(sf_grab_origin_data, \"data/rds/sf_grab_origin_data.rds\")\n\n\nsf_grab_origin_data &lt;- read_rds(\"data/rds/sf_grab_origin_data.rds\")\n\n\nsummary(sf_grab_origin_data)\n\n    trj_id          driving_mode          osname          pingtimestamp      \n Length:28000       Length:28000       Length:28000       Min.   :1.555e+09  \n Class :character   Class :character   Class :character   1st Qu.:1.555e+09  \n Mode  :character   Mode  :character   Mode  :character   Median :1.555e+09  \n                                                          Mean   :1.555e+09  \n                                                          3rd Qu.:1.556e+09  \n                                                          Max.   :1.556e+09  \n                                                                             \n     speed          bearing         accuracy      \n Min.   :-1.00   Min.   :  0.0   Min.   :  1.400  \n 1st Qu.: 6.25   1st Qu.: 90.0   1st Qu.:  3.900  \n Median :11.10   Median :179.0   Median :  6.000  \n Mean   :10.75   Mean   :172.6   Mean   :  7.476  \n 3rd Qu.:15.19   3rd Qu.:256.0   3rd Qu.: 10.000  \n Max.   :31.71   Max.   :359.0   Max.   :547.000  \n                                                  \n  pingtimstamp                    weekday       start_hr          day       \n Min.   :2019-04-08 00:09:40.00   Sun:3983   10     : 2106   17     : 2012  \n 1st Qu.:2019-04-11 08:48:39.50   Mon:3975   9      : 2100   18     : 2008  \n Median :2019-04-15 00:08:50.50   Tue:4008   0      : 1935   12     : 2007  \n Mean   :2019-04-14 21:30:13.19   Wed:4016   1      : 1921   9      : 2004  \n 3rd Qu.:2019-04-18 10:48:07.00   Thu:4008   7      : 1540   16     : 2004  \n Max.   :2019-04-21 23:34:01.00   Fri:4002   8      : 1538   13     : 2004  \n                                  Sat:4008   (Other):16860   (Other):15961  \n          geometry    \n POINT        :28000  \n epsg:3414    :    0  \n +proj=tmer...:    0  \n                      \n                      \n                      \n                      \n\n\n\ntmap_mode('plot')\ntm_shape(sf_grab_origin_data)+\n  tm_dots()\n\n\n\n\n\n\n\n\nouter_islands &lt;- mpsz3414[grep(\"island\", mpsz3414$PLN_AREA_N, ignore.case = TRUE), ] \n#print(outer_islands) \n\n\n#plot(outer_islands)\n\n\nmerged_map &lt;- st_union(mpsz3414, outer_islands)\n\n\nmap_without_outer_islands &lt;- st_difference(mpsz3414, st_union(outer_islands))\n\n\n#plot(map_without_outer_islands)\n\n\nsf_map_without_outer_islands &lt;- st_cast(map_without_outer_islands, \"POLYGON\")\n\n\n\n\n\nroads_in_singapore &lt;- st_intersection(road_data_3414, map_without_outer_islands)\n\n\nsf_roads_in_sg &lt;- st_cast(roads_in_singapore, \"LINESTRING\")\n\n\nwrite_rds(sf_roads_in_sg, \"data/rds/sf_roads_in_sg.rds\")\n\n\nsf_roads_in_sg &lt;- read_rds(\"data/rds/sf_roads_in_sg.rds\")\n\n\n#plot(map_without_outer_islands$geometry, main = \"Roads in Singapore\")\n#plot(roads_in_singapore$geometry, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-DataPrep.html#traditional-kernel-density-estimation-layers",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1-DataPrep.html#traditional-kernel-density-estimation-layers",
    "title": "Take-home Exercise 1: Data Preparation",
    "section": "",
    "text": "To reduce the data size and focus on one specific area, I will be doing the analysis on Punggol town.\n\n\n\nsg_sf &lt;- sf_map_without_outer_islands %&gt;%    \n  st_union()\n\n\nplot(sg_sf)\n\n\ngrab_origin_ppp &lt;- as.ppp(sf_grab_origin_data)\n\n\nsummary(grab_origin_ppp)\n\nMarked planar point pattern:  28000 points\nAverage intensity 2.47621e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    28000 character character \n\nWindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n                    (46180 x 24480 units)\nWindow area = 1130760000 square units\n\n\n\nplot(grab_origin_ppp)\n\n\nsummary(grab_origin_ppp)\n\nMarked planar point pattern:  28000 points\nAverage intensity 2.47621e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    28000 character character \n\nWindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n                    (46180 x 24480 units)\nWindow area = 1130760000 square units\n\n\n\nsg_owin &lt;- as.owin(sg_sf)  \nsummary(sg_owin)\n\nWindow: polygonal boundary\n31 separate polygons (29 holes)\n                  vertices         area relative.area\npolygon 1            12458  6.62835e+08      9.98e-01\npolygon 2              285  1.61128e+06      2.43e-03\npolygon 3 (hole)        41 -4.01660e+04     -6.05e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.70e-05\npolygon 5 (hole)         3 -4.14099e-04     -6.23e-13\npolygon 6 (hole)         4 -2.86396e-01     -4.31e-10\npolygon 7 (hole)         3 -1.81439e-04     -2.73e-13\npolygon 8 (hole)         3 -8.68789e-04     -1.31e-12\npolygon 9 (hole)         3 -5.99535e-04     -9.02e-13\npolygon 10 (hole)        3 -3.04561e-04     -4.58e-13\npolygon 11 (hole)        3 -4.46076e-04     -6.71e-13\npolygon 12 (hole)        3 -3.39794e-04     -5.11e-13\npolygon 13 (hole)        3 -4.52043e-05     -6.80e-14\npolygon 14 (hole)        3 -3.90173e-05     -5.87e-14\npolygon 15 (hole)        3 -9.59850e-05     -1.44e-13\npolygon 16 (hole)        4 -2.54488e-04     -3.83e-13\npolygon 17 (hole)        4 -4.28453e-01     -6.45e-10\npolygon 18 (hole)        4 -2.18616e-04     -3.29e-13\npolygon 19 (hole)        5 -2.44411e-04     -3.68e-13\npolygon 20 (hole)        5 -3.64686e-02     -5.49e-11\npolygon 21 (hole)        6 -8.37554e-01     -1.26e-09\npolygon 22 (hole)       38 -7.79904e+03     -1.17e-05\npolygon 23 (hole)        3 -3.41897e-05     -5.15e-14\npolygon 24 (hole)        3 -3.65499e-03     -5.50e-12\npolygon 25 (hole)        3 -4.95057e-02     -7.45e-11\npolygon 26 (hole)        5 -2.92235e-04     -4.40e-13\npolygon 27 (hole)        3 -7.43616e-06     -1.12e-14\npolygon 28 (hole)      270 -1.21455e+03     -1.83e-06\npolygon 29 (hole)       19 -4.39650e+00     -6.62e-09\npolygon 30 (hole)       35 -1.38385e+02     -2.08e-07\npolygon 31 (hole)       23 -1.99656e+01     -3.01e-08\nenclosing rectangle: [2667.54, 50284.23] x [21448.47, 50256.33] units\n                     (47620 x 28810 units)\nWindow area = 664346000 square units\nFraction of frame area: 0.484\n\n\n\nsg_grab_origin_ppp = grab_origin_ppp[sg_owin] \nsummary(sg_grab_origin_ppp)\n\nMarked planar point pattern:  27875 points\nAverage intensity 4.195855e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n    27875 character character \n\nWindow: polygonal boundary\n31 separate polygons (29 holes)\n                  vertices         area relative.area\npolygon 1            12458  6.62835e+08      9.98e-01\npolygon 2              285  1.61128e+06      2.43e-03\npolygon 3 (hole)        41 -4.01660e+04     -6.05e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.70e-05\npolygon 5 (hole)         3 -4.14099e-04     -6.23e-13\npolygon 6 (hole)         4 -2.86396e-01     -4.31e-10\npolygon 7 (hole)         3 -1.81439e-04     -2.73e-13\npolygon 8 (hole)         3 -8.68789e-04     -1.31e-12\npolygon 9 (hole)         3 -5.99535e-04     -9.02e-13\npolygon 10 (hole)        3 -3.04561e-04     -4.58e-13\npolygon 11 (hole)        3 -4.46076e-04     -6.71e-13\npolygon 12 (hole)        3 -3.39794e-04     -5.11e-13\npolygon 13 (hole)        3 -4.52043e-05     -6.80e-14\npolygon 14 (hole)        3 -3.90173e-05     -5.87e-14\npolygon 15 (hole)        3 -9.59850e-05     -1.44e-13\npolygon 16 (hole)        4 -2.54488e-04     -3.83e-13\npolygon 17 (hole)        4 -4.28453e-01     -6.45e-10\npolygon 18 (hole)        4 -2.18616e-04     -3.29e-13\npolygon 19 (hole)        5 -2.44411e-04     -3.68e-13\npolygon 20 (hole)        5 -3.64686e-02     -5.49e-11\npolygon 21 (hole)        6 -8.37554e-01     -1.26e-09\npolygon 22 (hole)       38 -7.79904e+03     -1.17e-05\npolygon 23 (hole)        3 -3.41897e-05     -5.15e-14\npolygon 24 (hole)        3 -3.65499e-03     -5.50e-12\npolygon 25 (hole)        3 -4.95057e-02     -7.45e-11\npolygon 26 (hole)        5 -2.92235e-04     -4.40e-13\npolygon 27 (hole)        3 -7.43616e-06     -1.12e-14\npolygon 28 (hole)      270 -1.21455e+03     -1.83e-06\npolygon 29 (hole)       19 -4.39650e+00     -6.62e-09\npolygon 30 (hole)       35 -1.38385e+02     -2.08e-07\npolygon 31 (hole)       23 -1.99656e+01     -3.01e-08\nenclosing rectangle: [2667.54, 50284.23] x [21448.47, 50256.33] units\n                     (47620 x 28810 units)\nWindow area = 664346000 square units\nFraction of frame area: 0.484\n\n\n\nplot(sg_grab_origin_ppp)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/data/geospatial/TAINAN_VILLAGE.html",
    "href": "Take-home_Ex/Take-home_Ex2/data/geospatial/TAINAN_VILLAGE.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“TWD97”,DATUM[“Taiwan Datum 1997”,ELLIPSOID[“GRS 1980”,6378137,298.257222101,LENGTHUNIT[“metre”,1]]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.”],BBOX[17.36,114.32,26.96,123.61]],ID[“EPSG”,3824]] +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs 27230 3824 EPSG:3824 TWD97 longlat EPSG:7019 true"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse)\n\n\n\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Hands-on_Ex\\Hands-on_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\n\n\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\n\n\n\n\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\n\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n\n\n\n\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\n\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\n\n\n\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\n\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n\n\n\n\n\n\n\n\n\n\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#getting-started",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#import-shapefile-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#import-shapefile-into-r-environment",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "hunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Hands-on_Ex\\Hands-on_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\n\n\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#global-measures-of-spatial-autocorrelation-1",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#global-measures-of-spatial-autocorrelation-1",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "wm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\n\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#global-measures-of-spatial-autocorrelation-morans-i",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#global-measures-of-spatial-autocorrelation-morans-i",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "moran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\n\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#global-measures-of-spatial-autocorrelation-gearys-c",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#global-measures-of-spatial-autocorrelation-gearys-c",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "geary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\n\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#spatial-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#spatial-correlogram",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "MI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#getting-the-data-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#getting-the-data-into-r-environment",
    "title": "Hands-on_Ex05",
    "section": "10.3 Getting the Data Into R Environment",
    "text": "10.3 Getting the Data Into R Environment\n\n10.3.1 Import shapefile into r environment\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Hands-on_Ex\\Hands-on_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n10.3.2 Import csv file into r environment\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n10.3.3 Performing relational join\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\n\n10.3.4 Visualising Regional Development Indicator\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#global-spatial-autocorrelation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#global-spatial-autocorrelation",
    "title": "Hands-on_Ex05",
    "section": "10.4 Global Spatial Autocorrelation",
    "text": "10.4 Global Spatial Autocorrelation\n\n10.4.1 Computing Contiguity Spatial Weights\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\n10.4.2 Row-standardised weights matrix\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n10.4.3 Global Spatial Autocorrelation: Moran’s I\n\n\n10.4.4 Maron’s I test\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n10.4.4.1 Computing Monte Carlo Moran’s I\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n10.4.4.2 Visualising Monte Carlo Moran’s I\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\n10.4.5 Global Spatial Autocorrelation: Geary’s\n\n10.4.5.1 Geary’s C test\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\n10.4.5.2 Computing Monte Carlo Geary’s C\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n10.4.5.3 Visualising the Monte Carlo Geary’s C\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#spatial-correlogram-1",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#spatial-correlogram-1",
    "title": "Hands-on_Ex05",
    "section": "10.5 Spatial Correlogram",
    "text": "10.5 Spatial Correlogram\n\n10.5.1 Compute Moran’s I correlogram\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n10.5.2 Compute Geary’s C correlogram and plot\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#cluster-and-outlier-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#cluster-and-outlier-analysis",
    "title": "Hands-on_Ex05",
    "section": "10.6 Cluster and Outlier Analysis",
    "text": "10.6 Cluster and Outlier Analysis\n\n10.6.1 Computing local Moran’s I\n\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n10.6.1.2 Mapping local Moran’s I values\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n10.6.1.3 Mapping local Moran’s I p-values\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n10.6.1.4 Mapping both local Moran’s I values and p-values\n\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#creating-a-lisa-cluster-map",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#creating-a-lisa-cluster-map",
    "title": "Hands-on_Ex05",
    "section": "10.7 Creating a LISA Cluster Map",
    "text": "10.7 Creating a LISA Cluster Map\n\n10.7.1 Plotting Moran scatterplot\n\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\n\n10.7.2 Plotting Moran scatterplot with standardised variable\n\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector \n\n\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n10.7.3 Preparing LISA map classes\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\n\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\n\nsignif &lt;- 0.05       \n\n\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\n\nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I &lt;- localMI[,1]   \nsignif &lt;- 0.05       \nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4    \nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n\n10.7.4 Plotting LISA map\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#hot-spot-and-cold-spot-area-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-on_Ex05",
    "section": "10.8 Hot Spot and Cold Spot Area Analysis",
    "text": "10.8 Hot Spot and Cold Spot Area Analysis\n\n10.8.1 Getis and Ord’s G-Statistics\nThe analysis consists of three steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics\n\n\n\n10.8.2 Deriving distance-based weight matrix\n\n10.8.2.1 Deriving the centroid\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n\ncoords &lt;- cbind(longitude, latitude)\n\n\n\n10.8.2.2 Determine the cut-off distance\n\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n\n10.8.2.3 Computing fixed distance weight matrix\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\n\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\n\n10.8.3 Computing adaptive distance weight matrix\n\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#computing-gi-statistics",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hand-on_Ex05.html#computing-gi-statistics",
    "title": "Hands-on_Ex05",
    "section": "10.9 Computing Gi statistics",
    "text": "10.9 Computing Gi statistics\n\n10.9.1 Gi statistics using fixed distance\n\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\n\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\n\n10.9.2 Mapping Gi values with fixed distance weights\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\n\n10.9.3 Gi statistics using adaptive distance\n\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\n10.9.4 Mapping Gi values with adaptive distance weights\n\ngdppc&lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Data_Prep_Take-home_Ex2.html#getting-started",
    "href": "Take-home_Ex/Take-home_Ex2/Data_Prep_Take-home_Ex2.html#getting-started",
    "title": "Take-home_Ex2: Data Preparation",
    "section": "Getting Started",
    "text": "Getting Started\n\npacman::p_load(arrow, lubridate, tidyverse,maptools, sf, spNetwork, raster, spatstat, tmap)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Data_Prep_Take-home_Ex2.html#loading-aspatial-data-of-dengue-fever",
    "href": "Take-home_Ex/Take-home_Ex2/Data_Prep_Take-home_Ex2.html#loading-aspatial-data-of-dengue-fever",
    "title": "Take-home_Ex2: Data Preparation",
    "section": "1. Loading Aspatial Data of Dengue Fever",
    "text": "1. Loading Aspatial Data of Dengue Fever\n\ndengue_daily &lt;- read.csv(\"data/aspatial/Dengue_Daily.csv\")\n\n\n1.1 Filtering the data into Week 31 - 50 of 2023 and selecting the necessary data\n\ndengue_filtered &lt;- dengue_daily[dengue_daily$發病日 &gt;= as.Date(\"2023-07-30\") & dengue_daily$發病日 &lt;= as.Date(\"2023-12-16\"), ] \n\n\ndengue_filtered['epi_week'] &lt;- epiweek(dengue_filtered$發病日)\n\n\ncolSums(is.na(dengue_filtered))\n\n            發病日         個案研判日             通報日               性別 \n                 0                  0                  0                  0 \n            年齡層           居住縣市           居住鄉鎮           居住村里 \n                 0                  0                  0                  0 \n        最小統計區  最小統計區中心點X  最小統計區中心點Y         一級統計區 \n                 0                  0                  0                  0 \n        二級統計區           感染縣市           感染鄉鎮           感染村里 \n                 0                  0                  0                  0 \n      是否境外移入           感染國家         確定病例數       居住村里代碼 \n                 0                  0                  0                  0 \n      感染村里代碼             血清型 內政部居住縣市代碼 內政部居住鄉鎮代碼 \n                 0                  0                  0                  0 \n內政部感染縣市代碼 內政部感染鄉鎮代碼           epi_week \n                 0                  0                  0 \n\n\n\n#write_rds(dengue_filtered, \"data/rds/dengue_filtered.rds\")\n\n\n\n1.2 Transforming the coordination of the dengue fever data\n\n1.2.1 Checking of null values col: 最小統計區中心點X and 最小統計區中心點Y\n\nsum(is.na(dengue_filtered$最小統計區中心點X))\n\n[1] 0\n\nsum(is.nan(dengue_filtered$最小統計區中心點X))\n\n[1] 0\n\n\nSince fan\n\nsum(is.na(dengue_filtered$最小統計區中心點Y))\n\n[1] 0\n\nsum(is.nan(dengue_filtered$最小統計區中心點Y))\n\n[1] 0\n\n\n\nclass(dengue_filtered$最小統計區中心點X)\n\n[1] \"character\"\n\nclass(dengue_filtered$最小統計區中心點Y)\n\n[1] \"character\"\n\n\n\n\n1.2.2 Changing the class type of important columns\nSince the class type of col: is in “character”, we need to change the data type into numerical\n\n# Convert character columns to numeric\ndengue_filtered$最小統計區中心點X &lt;- as.numeric(dengue_filtered$最小統計區中心點X)\ndengue_filtered$最小統計區中心點Y &lt;- as.numeric(dengue_filtered$最小統計區中心點Y)\n\n\n# Remove rows with non-numeric values in the specified columns\ndengue_filtered &lt;- dengue_filtered[!is.na(as.numeric(dengue_filtered$最小統計區中心點X)), ]\ndengue_filtered &lt;- dengue_filtered[!is.na(as.numeric(dengue_filtered$最小統計區中心點Y)), ]\n\n\nclass(dengue_filtered$最小統計區中心點X)\n\n[1] \"numeric\"\n\nclass(dengue_filtered$最小統計區中心點Y)\n\n[1] \"numeric\"\n\n\n\ndengue_sf &lt;- st_as_sf(dengue_filtered, \n                      coords = c(\"最小統計區中心點X\",\"最小統計區中心點Y\"),\n                      crs=3824)\n\n\nsummary(dengue_sf)\n\n    發病日           個案研判日           通報日              性別          \n Length:25461       Length:25461       Length:25461       Length:25461      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    年齡層            居住縣市           居住鄉鎮           居住村里        \n Length:25461       Length:25461       Length:25461       Length:25461      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  最小統計區         一級統計區         二級統計區          感染縣市        \n Length:25461       Length:25461       Length:25461       Length:25461      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   感染鄉鎮           感染村里         是否境外移入         感染國家        \n Length:25461       Length:25461       Length:25461       Length:25461      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   確定病例數 居住村里代碼       感染村里代碼          血清型         \n Min.   :1    Length:25461       Length:25461       Length:25461      \n 1st Qu.:1    Class :character   Class :character   Class :character  \n Median :1    Mode  :character   Mode  :character   Mode  :character  \n Mean   :1                                                            \n 3rd Qu.:1                                                            \n Max.   :1                                                            \n 內政部居住縣市代碼 內政部居住鄉鎮代碼 內政部感染縣市代碼 內政部感染鄉鎮代碼\n Length:25461       Length:25461       Length:25461       Length:25461      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    epi_week              geometry    \n Min.   :31.00   POINT        :25461  \n 1st Qu.:37.00   epsg:3824    :    0  \n Median :40.00   +proj=long...:    0  \n Mean   :39.96                        \n 3rd Qu.:43.00                        \n Max.   :50.00                        \n\n\n\n\n\n1.3 Filtering Important Columns for analysis\n\n1.3.1 Changing the column names into English for easier reading\n\ncolnames(dengue_sf)\n\n [1] \"發病日\"             \"個案研判日\"         \"通報日\"            \n [4] \"性別\"               \"年齡層\"             \"居住縣市\"          \n [7] \"居住鄉鎮\"           \"居住村里\"           \"最小統計區\"        \n[10] \"一級統計區\"         \"二級統計區\"         \"感染縣市\"          \n[13] \"感染鄉鎮\"           \"感染村里\"           \"是否境外移入\"      \n[16] \"感染國家\"           \"確定病例數\"         \"居住村里代碼\"      \n[19] \"感染村里代碼\"       \"血清型\"             \"內政部居住縣市代碼\"\n[22] \"內政部居住鄉鎮代碼\" \"內政部感染縣市代碼\" \"內政部感染鄉鎮代碼\"\n[25] \"epi_week\"           \"geometry\"          \n\n\n\n\n\nAttribute\nTranslation in English\n\n\n\n\n發病日\nOnset date\n\n\n個案研判日\nCase confirmation date\n\n\n通報日\nReporting date\n\n\n性別\nGender\n\n\n年齡層\nAge Group\n\n\n居住縣市\nResidential County\n\n\n居住鄉鎮\nResidential Town name\n\n\n居住村里\nResidential Village\n\n\n最小統計區\nSmallest statistical area\n\n\n一級統計區\nFirst-level statistical area\n\n\n二級統計區\nSecond-level statistical area\n\n\n感染縣市\nInfected county\n\n\n感染鄉鎮\nInfected town\n\n\n感染村里\nInfected village\n\n\n是否境外移入\nWhether imported from overseas\n\n\n感染國家\nInfected country\n\n\n確定病例數\nConfirmed case count\n\n\n居住村里代碼\nResidential village code\n\n\n感染村里代碼\nInfected village code\n\n\n血清型\nSerotype\n\n\n內政部居住縣市代碼\nInternal residential county code\n\n\n內政部居住鄉鎮代碼\nInternal residential town code\n\n\n內政部感染縣市代碼\nInternal infected county code\n\n\n內政部感染鄉鎮代碼\nInternal infected town code\n\n\n\nAs there are many rows of data, I will be only transforming useful columns, such as 發病日, 通報日, 性別, 年齡層, 感染縣市, 感染鄉鎮, 感染村里, ndefinedndefinednd\n\neng_dengue_data &lt;- dengue_sf %&gt;% rename(\n  ONSET_DAY = 發病日,\n  CASE_CONFIRMATION_DAY = 通報日, \n  GENDER = 性別,\n  AGE_GRP = 年齡層,\n  COUNTYNAME = 感染縣市, \n  TOWNNAME = 感染鄉鎮, \n  VILLNAME = 感染村里,\n  INFECTED_COUNTRY = 感染國家, \n  CONFIRMED_CASE_COUNT = 確定病例數\n)\n\n\n\n1.3.2 Reduction of data size\n\ndengue_sf_1 &lt;- eng_dengue_data[, c(\"ONSET_DAY\", \"CASE_CONFIRMATION_DAY\", \"GENDER\", \"AGE_GRP\", \"COUNTYNAME\", \"TOWNNAME\", \"VILLNAME\", \"INFECTED_COUNTRY\",\"CONFIRMED_CASE_COUNT\", \"epi_week\",\"geometry\")]\n\n\ndengue_data &lt;- write_rds(dengue_sf_1, \"data/rds/dengue_data.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Data_Prep_Take-home_Ex2.html#loading-geo-spatial-data-tainan-village-data",
    "href": "Take-home_Ex/Take-home_Ex2/Data_Prep_Take-home_Ex2.html#loading-geo-spatial-data-tainan-village-data",
    "title": "Take-home_Ex2: Data Preparation",
    "section": "2. Loading Geo-spatial Data: TaiNan Village Data",
    "text": "2. Loading Geo-spatial Data: TaiNan Village Data\n\ntainan_village &lt;- st_read(dsn = \"data/geospatial\", \n                          layer = \"TAINAN_VILLAGE\")\n\nReading layer `TAINAN_VILLAGE' from data source \n  `C:\\Users\\Kachel Lee\\ka33rina\\IS415GAA\\Take-home_Ex\\Take-home_Ex2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n\n\n\nhead(tainan_village)\n\nSimple feature collection with 6 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.053 ymin: 22.93251 xmax: 120.2905 ymax: 23.16919\nGeodetic CRS:  TWD97\n     VILLCODE COUNTYNAME TOWNNAME VILLNAME        VILLENG COUNTYID COUNTYCODE\n1 67000280002     臺南市   歸仁區   六甲里    Liujia Vil.        D      67000\n2 67000350032     臺南市   安南區   青草里   Qingcao Vil.        D      67000\n3 67000150009     臺南市   七股區   溪南里     Xinan Vil.        D      67000\n4 67000150010     臺南市   七股區   七股里      Qigu Vil.        D      67000\n5 67000150008     臺南市   七股區   龍山里  Longshan Vil.        D      67000\n6 67000150017     臺南市   七股區   中寮里 Zhongliao Vil.        D      67000\n  TOWNID TOWNCODE NOTE                       geometry\n1    D33 67000280 &lt;NA&gt; POLYGON ((120.2725 22.95868...\n2    D06 67000350 &lt;NA&gt; POLYGON ((120.1176 23.08387...\n3    D22 67000150 &lt;NA&gt; POLYGON ((120.121 23.1355, ...\n4    D22 67000150 &lt;NA&gt; POLYGON ((120.1312 23.1371,...\n5    D22 67000150 &lt;NA&gt; POLYGON ((120.0845 23.13503...\n6    D22 67000150 &lt;NA&gt; POLYGON ((120.126 23.16917,...\n\n\n\nfiltered_tainan_village &lt;- tainan_village %&gt;%\n  filter(TOWNID %in% c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\")) %&gt;% st_transform()\n\n\nwrite_rds(filtered_tainan_village, \"data/rds/filtered_tainan_village.rds\")\n\n\n2.1 Understanding the geospatial data\n\nplot(st_geometry(filtered_tainan_village))\n\n\ntmap_mode(\"plot\")\ntm_shape(filtered_tainan_village) +\n  tm_polygons(\"TOWNID\")\n  tm_borders()\n\n\ntmap_mode(\"plot\")\ntm_shape(filtered_tainan_village) +\n  tm_fill(\"VILLNAME\", \n          alpha = 0.2) +\n  tm_borders()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "pacman::p_load(arrow, lubridate, tidyverse,maptools, sf, spNetwork, raster, spatstat, tmap, sfdep, spdep, dplyr)\n\n\n\n\n#reduced-size sf data\ndengue_data &lt;- read_rds(\"data/rds/dengue_data.rds\")\n\n\n#joint data\ntainan_dengue &lt;- read_rds(\"data/rds/tainan_dengue.rds\")\n\n\n#geospatial data\ntainan_v &lt;- read_rds(\"data/rds/filtered_tainan_village.rds\")\n\n\n\n\nTo have a better idea of how is the distributions of dengue cases in Tainan, we can do it by grouping the data into different groups.\n\nhead(dengue_data)\n\nSimple feature collection with 6 features and 10 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 120.218 ymin: 22.97608 xmax: 120.2465 ymax: 23.01932\nGeodetic CRS:  TWD97\n       ONSET_DAY CASE_CONFIRMATION_DAY GENDER AGE_GRP COUNTYNAME TOWNNAME\n81015 2023/07/30            2023/07/31     女   65-69     台南市     東區\n81016 2023/07/30            2023/07/31     男     70+     台南市     東區\n81017 2023/07/30            2023/07/31     女   50-54     台南市   永康區\n81018 2023/07/30            2023/07/31     女   15-19     台南市   永康區\n81019 2023/07/30            2023/07/31     女   15-19     台南市   永康區\n81020 2023/07/30            2023/08/02     男   50-54     台南市   永康區\n      VILLNAME INFECTED_COUNTRY CONFIRMED_CASE_COUNT epi_week\n81015     None         中華民國                    1       31\n81016     None         中華民國                    1       31\n81017     None         中華民國                    1       31\n81018     None         中華民國                    1       31\n81019     None         中華民國                    1       31\n81020     None         中華民國                    1       31\n                       geometry\n81015 POINT (120.2202 22.97608)\n81016  POINT (120.218 22.98007)\n81017 POINT (120.2354 23.01374)\n81018 POINT (120.2456 23.01932)\n81019 POINT (120.2465 23.01821)\n81020 POINT (120.2266 23.01695)\n\n\n\nhead(tainan_dengue)\n\nSimple feature collection with 6 features and 20 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0936 ymin: 22.9156 xmax: 120.2585 ymax: 23.08827\nGeodetic CRS:  TWD97\n       VILLCODE COUNTYNAME.x TOWNNAME.x VILLNAME.x      VILLENG COUNTYID\n1   67000350032       臺南市     安南區     青草里 Qingcao Vil.        D\n1.1 67000350032       臺南市     安南區     青草里 Qingcao Vil.        D\n2   67000270011       臺南市     仁德區     保安里  Bao'an Vil.        D\n2.1 67000270011       臺南市     仁德區     保安里  Bao'an Vil.        D\n2.2 67000270011       臺南市     仁德區     保安里  Bao'an Vil.        D\n2.3 67000270011       臺南市     仁德區     保安里  Bao'an Vil.        D\n    COUNTYCODE TOWNID TOWNCODE NOTE  ONSET_DAY CASE_CONFIRMATION_DAY GENDER\n1        67000    D06 67000350 &lt;NA&gt; 2023/09/14            2023/09/15     男\n1.1      67000    D06 67000350 &lt;NA&gt; 2023/10/12            2023/10/12     男\n2        67000    D32 67000270 &lt;NA&gt; 2023/08/04            2023/08/06     男\n2.1      67000    D32 67000270 &lt;NA&gt; 2023/09/10            2023/09/10     女\n2.2      67000    D32 67000270 &lt;NA&gt; 2023/09/11            2023/09/11     男\n2.3      67000    D32 67000270 &lt;NA&gt; 2023/09/16            2023/09/17     男\n    AGE_GRP COUNTYNAME.y TOWNNAME.y VILLNAME.y INFECTED_COUNTRY\n1     40-44       台南市     安南區       None         中華民國\n1.1   30-34       台南市       None       None         中華民國\n2     25-29       台南市     仁德區       None         中華民國\n2.1     70+       台南市     仁德區       None         中華民國\n2.2   25-29       台南市     仁德區       None         中華民國\n2.3   40-44       台南市     仁德區       None         中華民國\n    CONFIRMED_CASE_COUNT epi_week                       geometry\n1                      1       37 POLYGON ((120.1176 23.08387...\n1.1                    1       41 POLYGON ((120.1176 23.08387...\n2                      1       31 POLYGON ((120.2304 22.93544...\n2.1                    1       37 POLYGON ((120.2304 22.93544...\n2.2                    1       37 POLYGON ((120.2304 22.93544...\n2.3                    1       37 POLYGON ((120.2304 22.93544...\n\n\n\ntmap_mode(\"plot\")\ntown_map &lt;- tm_shape(tainan_dengue) +\n  tm_polygons(col = \"TOWNID\") +\n  tm_layout(legend.show = TRUE, main.title = \"Overview of Dengue Study Area\", main.title.size = 1) +\n  tm_scale_bar()\n\n\ntmap_mode(\"plot\")\nv_map &lt;- tm_shape(tainan_dengue) +\n  tm_polygons(col = \"VILLENG\") +\n  tm_layout(legend.show = TRUE, main.title = \"Overview of Dengue Study Area\", main.title.size = 1) +\n  tm_scale_bar()\n\n\ntmap_arrange(town_map,v_map, ncol=2)\n\n\n\n\n\nggplot(tainan_dengue, aes(x = TOWNID)) +\n  geom_bar(fill = \"steelblue\", color = \"black\", bins = 20) +\n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5)\n\n\n\n\n\n\nSince there is 1 NA values in the column: CONFIRMED_CASE_COUNT coloumn for D06, we need to mutate some of the rows\n\n# Check for NA values in CONFIRMED_CASE_COUNT column for D06\nsum(is.na(tainan_dengue$CONFIRMED_CASE_COUNT[tainan_dengue$TOWNID == \"D06\"]))\n\n[1] 1\n\n\n\ntainan_dengue_imputed &lt;- tainan_dengue %&gt;%\n  mutate(CONFIRMED_CASE_COUNT = ifelse(is.na(CONFIRMED_CASE_COUNT), 0, CONFIRMED_CASE_COUNT))\n\n\nwrite_rds(tainan_dengue_imputed, \"data/rds/tainan_dengue_2.rds\")\n\n\ntainan_dengue_2 &lt;- read_rds(\"data/rds/tainan_dengue_2.rds\")\n\n\ntown_data &lt;- tainan_dengue_2 %&gt;%\n  group_by(TOWNID) %&gt;%\n  summarise(total_cases = sum(CONFIRMED_CASE_COUNT))\n\n# Now you can print the summarized data again\nprint(town_data)\n\nSimple feature collection with 8 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 8 × 3\n  TOWNID total_cases                                                    geometry\n  &lt;chr&gt;        &lt;dbl&gt;                                               &lt;POLYGON [°]&gt;\n1 D01           4127 ((120.2371 22.96098, 120.2372 22.961, 120.2378 22.9611, 12…\n2 D02           2831 ((120.192 22.98817, 120.1908 22.98841, 120.1904 22.98849, …\n3 D04           2735 ((120.2176 23.02032, 120.2173 23.02013, 120.2172 23.01999,…\n4 D06           3211 ((120.2154 23.02506, 120.2155 23.02511, 120.216 23.02552, …\n5 D07            740 ((120.1652 23.00266, 120.1652 23.00267, 120.1652 23.00273,…\n6 D08           1506 ((120.2001 22.98145, 120.2009 22.98144, 120.2009 22.98144,…\n7 D32            596 ((120.2247 22.96165, 120.2246 22.96166, 120.2243 22.9617, …\n8 D39           3070 ((120.2347 22.99849, 120.2349 22.99848, 120.2355 22.99849,…\n\n\n\ntown_data_map &lt;- tm_shape(town_data) +\n  tm_borders() +\n  tm_fill(\"total_cases\") +\n   tm_layout(main.title = \"Total Confirmed Cases by Town\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE)+\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\nv_data &lt;- tainan_dengue_2 %&gt;%\n  group_by(VILLCODE) %&gt;%\n  summarise(total_cases = sum(CONFIRMED_CASE_COUNT))\n\n\nv_data_map &lt;- tm_shape(v_data) +\n  tm_borders() +\n  tm_fill(\"total_cases\") +\n   tm_layout(main.title = \"Total Confirmed Cases by Village\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE)+\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n\n\ntmap_arrange(town_data_map, v_data_map, nrow = 1)\n\n\n\n\n\n\n\n\nnew_vw_dengue &lt;- tainan_dengue %&gt;%\n  group_by(VILLCODE, epi_week) %&gt;% \n  summarise(total_cases = sum(CONFIRMED_CASE_COUNT))  %&gt;%\n  complete(epi_week = 31:50, fill = list(total_cases = 0)) %&gt;%\n  st_drop_geometry()\n\n\nvw_dengue &lt;- tainan_dengue_2 %&gt;%\n  group_by(VILLCODE, epi_week) %&gt;% \n  summarise(total_cases = sum(CONFIRMED_CASE_COUNT))  %&gt;%\n  complete(epi_week = 31:50, fill = list(total_cases = 0)) \n\n\nprint(vw_dengue)\n\n# A tibble: 5,161 × 4\n# Groups:   VILLCODE [258]\n   VILLCODE    epi_week total_cases                                     geometry\n   &lt;chr&gt;          &lt;dbl&gt;       &lt;dbl&gt;                                &lt;POLYGON [°]&gt;\n 1 67000270001       31           0                                        EMPTY\n 2 67000270001       32           0                                        EMPTY\n 3 67000270001       33           1 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 4 67000270001       34           1 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 5 67000270001       35           2 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 6 67000270001       36           2 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 7 67000270001       37           6 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 8 67000270001       38           3 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 9 67000270001       39           4 ((120.2672 22.99655, 120.2668 22.99643, 120…\n10 67000270001       40           1 ((120.2672 22.99655, 120.2668 22.99643, 120…\n# ℹ 5,151 more rows\n\n\n\nvw_dengue &lt;- na.omit(vw_dengue) %&gt;%  st_drop_geometry()\n\n\n#vw_dengue_2 &lt;- vw_dengue %&gt;%\n  #left_join(tainan_v, by = \"VILLCODE\")%&gt;% \n  #dplyr:: select(1:3,14)%&gt;% \n  #drop_na()\n\n\nvw_dengue_3 &lt;- vw_dengue %&gt;%\n  dplyr:: select(-geometry)\n\n\nvw_dengue_3 &lt;- as_tibble(vw_dengue_3)\n\n\n#colSums(is.na(vw_dengue_2))\n\n\n#class(tainan_dengue_2$geometry)\n\n\n\n\n\n\n\n\nwm_q_v &lt;- v_data %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\n\nwm_q_v\n\nSimple feature collection with 258 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 258 × 5\n   nb         wt         VILLCODE    total_cases                        geometry\n * &lt;nb&gt;       &lt;list&gt;     &lt;chr&gt;             &lt;dbl&gt;                   &lt;POLYGON [°]&gt;\n 1 &lt;int [9]&gt;  &lt;dbl [9]&gt;  67000270001          37 ((120.2672 22.99655, 120.2668 …\n 2 &lt;int [3]&gt;  &lt;dbl [3]&gt;  67000270002          15 ((120.2659 22.99146, 120.2631 …\n 3 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270003          39 ((120.2492 22.98265, 120.2492 …\n 4 &lt;int [12]&gt; &lt;dbl [12]&gt; 67000270004         105 ((120.239 22.98012, 120.2389 2…\n 5 &lt;int [3]&gt;  &lt;dbl [3]&gt;  67000270005         163 ((120.2577 22.97432, 120.2572 …\n 6 &lt;int [4]&gt;  &lt;dbl [4]&gt;  67000270006          15 ((120.2713 22.96804, 120.2712 …\n 7 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270007          41 ((120.2404 22.95915, 120.2404 …\n 8 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270008          30 ((120.2701 22.94841, 120.2684 …\n 9 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270011          19 ((120.2304 22.93544, 120.2301 …\n10 &lt;int [14]&gt; &lt;dbl [14]&gt; 67000270012          62 ((120.2247 22.96165, 120.2247 …\n# ℹ 248 more rows\n\n\n\n\n\n\nmoranI_v &lt;- global_moran(wm_q_v$total_cases,\n                       wm_q_v$nb,\n                       wm_q_v$wt)\nglimpse(moranI_v)\n\nList of 2\n $ I: num 0.468\n $ K: num 5.64\n\n\n\n\n\n\nglobal_moran_test(wm_q_v$total_cases,\n                       wm_q_v$nb,\n                       wm_q_v$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 12.869, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.468370647      -0.003891051       0.001346741 \n\n\n\n\n\n\nset.seed(1234)\n\n\nglobal_moran_perm(wm_q_v$total_cases,\n                       wm_q_v$nb,\n                       wm_q_v$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.46837, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\n\nLocal Moran’s I analysis is used to detect localized clusters of high or low values in spatial data, providing insights into spatial heterogeneity and informing targeted interventions or policies. By complementing global measures of spatial autocorrelation, such as Moran’s I, it helps validate overall spatial patterns and visualizes spatial clusters for enhanced interpretation.\n\n\nThis is useful to detect clusters and outliers.\n\nlisa &lt;- wm_q_v %&gt;% \n  mutate(local_moran = local_moran(\n    total_cases, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\n\n\n\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of total_cases\",\n            main.title.size = 0.8)\n\n\n\n\n\ntmap_mode(\"plot\")\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\n\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii &lt; 0.05)\ntmap_mode(\"plot\")\nlisa_map &lt;- tm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)+ \n  tm_scale_bar() +\n  tm_layout(legend.show = TRUE, main.title = \"Overview of Outliers and Clusters\", main.title.size = 1)\n\nTo have a better understanding on clusters and outliers better, it is good to show the distribution of town in Tainan region.\n\ntmap_mode(\"plot\")\ntmap_arrange(lisa_map, town_map, ncol = 2)\n\n\n\n\nFrom the above visualization, the low-low clusters are mainly found in the northern and south-eastern part of the study area. While high-high clusters are mainly found surrounding central area, in D06, D01, D02, D39.\n\n\n\n\n\n\n\nwm_idw_v &lt;- v_data %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n\nHCSA_v &lt;- wm_idw_v %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    total_cases, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA_v\n\nSimple feature collection with 258 features and 14 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 258 × 15\n   gi_star cluster    e_gi    var_gi std_dev p_value p_sim p_folded_sim skewness\n     &lt;dbl&gt; &lt;fct&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n 1 -0.996  Low     0.00370   7.49e-7  -0.909 0.363    0.36         0.18   0.217 \n 2 -1.16   Low     0.00311   2.20e-6  -0.691 0.490    0.54         0.27   1.37  \n 3 -0.124  Low     0.00355   1.42e-6   0.139 0.889    0.86         0.43   0.622 \n 4  1.04   High    0.00403   5.46e-7   0.979 0.328    0.32         0.16   0.133 \n 5  0.260  High    0.00522   1.73e-6  -0.716 0.474    0.5          0.25   0.365 \n 6 -0.0819 Low     0.00325   1.55e-6   0.409 0.683    0.56         0.28   0.950 \n 7 -1.24   Low     0.00361   1.39e-6  -1.10  0.269    0.26         0.13   0.392 \n 8 -2.19   Low     0.00343   1.38e-6  -1.97  0.0488   0.02         0.01   0.755 \n 9 -2.05   Low     0.00339   1.32e-6  -1.83  0.0677   0.06         0.03   0.406 \n10 -2.37   Low     0.00370   4.03e-7  -2.64  0.00823  0.02         0.01   0.0995\n# ℹ 248 more rows\n# ℹ 6 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, VILLCODE &lt;chr&gt;,\n#   total_cases &lt;dbl&gt;, geometry &lt;POLYGON [°]&gt;\n\n\n\n\n\n\ntmap_mode(\"plot\")\nmap_1 &lt;- tm_shape(HCSA_v) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))+ \n  tm_layout(legend.show = TRUE, main.title = \"Gi* of study area\", main.title.size = 1)\n\n\n\n\n\ntmap_mode(\"plot\")\nmap_2 &lt;- tm_shape(HCSA_v) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)+ \n  tm_layout(legend.show = TRUE, main.title = \"p-value of HSCA\", main.title.size = 1)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(map_1, map_2, ncol = 2)\n\n\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA_v  %&gt;%\n  filter(p_sim &lt; 0.05)\n\ntmap_mode(\"plot\")\nHSCA_map &lt;- tm_shape(HCSA_v) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)+ \n  tm_scale_bar()+\n  tm_layout(legend.show = TRUE, main.title = \"Hot spot & Cold spot areas\", main.title.size = 1)\n\n\ntmap_mode(\"plot\")\ntmap_arrange(HSCA_map, v_map, ncol = 2)\n\n\n\n\n\n\n\n\nglimpse(vw_dengue)\n\nRows: 5,160\nColumns: 4\nGroups: VILLCODE [258]\n$ VILLCODE    &lt;chr&gt; \"67000270001\", \"67000270001\", \"67000270001\", \"67000270001\"…\n$ epi_week    &lt;dbl&gt; 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45…\n$ total_cases &lt;dbl&gt; 0, 0, 1, 1, 2, 2, 6, 3, 4, 1, 1, 2, 4, 5, 1, 1, 3, 0, 0, 0…\n$ geometry    &lt;POLYGON [°]&gt; POLYGON EMPTY, POLYGON EMPTY, POLYGON ((120.2672 2…\n\n\n\ntainan_st &lt;- spacetime(vw_dengue_3, tainan_v, \n                   .loc_col = \"VILLCODE\",\n                   .time_col = \"epi_week\",\n                   active = \"data\")\n\n\nis_spacetime_cube(tainan_st)\n\n[1] TRUE\n\n\n\n\n\n\ntainan_nb &lt;- tainan_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %&gt;%\n    set_nbs(\"nb\") %&gt;%\n    set_wts(\"wt\")\n\n\nglimpse(tainan_st)\n\nRows: 5,160\nColumns: 3\n$ VILLCODE    &lt;chr&gt; \"67000270001\", \"67000270001\", \"67000270001\", \"67000270001\"…\n$ epi_week    &lt;dbl&gt; 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45…\n$ total_cases &lt;dbl&gt; 0, 0, 1, 1, 2, 2, 6, 3, 4, 1, 1, 2, 4, 5, 1, 1, 3, 0, 0, 0…\n\n\n\nhead(tainan_nb)\n\n# A tibble: 6 × 5\n  VILLCODE    epi_week total_cases nb        wt       \n  &lt;chr&gt;          &lt;dbl&gt;       &lt;dbl&gt; &lt;list&gt;    &lt;list&gt;   \n1 67000350032       31           0 &lt;int [4]&gt; &lt;dbl [4]&gt;\n2 67000270011       31           1 &lt;int [6]&gt; &lt;dbl [6]&gt;\n3 67000370005       31           0 &lt;int [9]&gt; &lt;dbl [9]&gt;\n4 67000330004       31           0 &lt;int [7]&gt; &lt;dbl [7]&gt;\n5 67000350028       31           0 &lt;int [5]&gt; &lt;dbl [5]&gt;\n6 67000350030       31           0 &lt;int [8]&gt; &lt;dbl [8]&gt;\n\n\n\n\n\n\ngi_stars &lt;- tainan_nb %&gt;% \n  group_by(epi_week) %&gt;% \n  mutate(gi_star = local_gstar_perm(total_cases, nb, wt)) %&gt;% \n  tidyr::unnest(gi_star)\n\n\ngistar_map &lt;- left_join(tainan_v, gi_stars,\n                          by = c(\"VILLCODE\" = \"VILLCODE\"))\n\n\nhead(gistar_map)\n\nSimple feature collection with 6 features and 24 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0936 ymin: 23.05871 xmax: 120.1185 ymax: 23.08827\nGeodetic CRS:  TWD97\n     VILLCODE COUNTYNAME TOWNNAME VILLNAME      VILLENG COUNTYID COUNTYCODE\n1 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n2 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n3 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n4 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n5 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n6 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n  TOWNID TOWNCODE NOTE epi_week total_cases             nb\n1    D06 67000350 &lt;NA&gt;       31           0 1, 6, 118, 160\n2    D06 67000350 &lt;NA&gt;       32           0 1, 6, 118, 160\n3    D06 67000350 &lt;NA&gt;       33           0 1, 6, 118, 160\n4    D06 67000350 &lt;NA&gt;       34           0 1, 6, 118, 160\n5    D06 67000350 &lt;NA&gt;       35           0 1, 6, 118, 160\n6    D06 67000350 &lt;NA&gt;       36           0 1, 6, 118, 160\n                                          wt    gi_star cluster        e_gi\n1 0.0000000, 0.3730707, 0.5166453, 0.3002859 -0.8151163     Low 0.002169319\n2 0.0000000, 0.3730707, 0.5166453, 0.3002859 -1.0671266     Low 0.002144715\n3 0.0000000, 0.3730707, 0.5166453, 0.3002859 -1.0377590     Low 0.002451856\n4 0.0000000, 0.3730707, 0.5166453, 0.3002859 -1.2677099     Low 0.002383876\n5 0.0000000, 0.3730707, 0.5166453, 0.3002859 -1.6374908     Low 0.002386591\n6 0.0000000, 0.3730707, 0.5166453, 0.3002859 -1.6756230     Low 0.002347521\n        var_gi    std_dev   p_value p_sim p_folded_sim skewness  kurtosis\n1 9.990736e-06 -0.6863169 0.4925133 0.304        0.002 3.621622 20.632237\n2 6.494679e-06 -0.8415710 0.4000282 0.160        0.002 2.574007 10.631890\n3 7.814990e-06 -0.7155669 0.4742588 0.368        0.114 2.089142  5.245152\n4 6.022745e-06 -0.9713739 0.3313621 0.032        0.002 2.377214  7.127481\n5 4.108333e-06 -1.1774575 0.2390130 0.012        0.002 1.919706  5.515143\n6 2.810493e-06 -1.2079759 0.2270565 0.052        0.022 1.769926  4.977910\n                        geometry\n1 POLYGON ((120.1176 23.08387...\n2 POLYGON ((120.1176 23.08387...\n3 POLYGON ((120.1176 23.08387...\n4 POLYGON ((120.1176 23.08387...\n5 POLYGON ((120.1176 23.08387...\n6 POLYGON ((120.1176 23.08387...\n\n\n\ntmap_mode(\"plot\")\ntm &lt;- tm_shape(gistar_map) +\n    tm_polygons(col = \"p_value\", palette = \"RdYlBu\", style = \"cont\", legend.show = TRUE) +\n    tm_layout(legend.position = c(\"right\", \"bottom\"))\n\ntm\n\n\n\n\nFrom the above map, the darker the red color, indicating them having a lower p-values. We can interpret that those villages are more likely to be significantly associated with higher or lower dengue cases compared to their neighbors. Let’s find out more by filtering out those villages with less than 0.05 p-value.\n\ngistar_map_pvalue &lt;- subset(gistar_map, p_value &lt;= 0.05)\n\n\nunique_villnames &lt;- unique(gistar_map_pvalue$VILLNAME)\ntotal_unique_villnames &lt;- length(unique_villnames)\n\n# Print the total number of unique VILLNAME values\nprint(length(unique(gistar_map_pvalue$VILLNAME)))\n\n[1] 141\n\nprint(unique(gistar_map_pvalue$VILLNAME))\n\n  [1] \"赤嵌里\"   \"大成里\"   \"城北里\"   \"城南里\"   \"法華里\"   \"國安里\"  \n  [7] \"城中里\"   \"城東里\"   \"南灣里\"   \"五王里\"   \"安康里\"   \"西橋里\"  \n [13] \"網寮里\"   \"大橋里\"   \"東橋里\"   \"王行里\"   \"大智里\"   \"崇成里\"  \n [19] \"崇明里\"   \"崇德里\"   \"崇學里\"   \"和平里\"   \"崇善里\"   \"路東里\"  \n [25] \"虎尾里\"   \"忠孝里\"   \"崇信里\"   \"德光里\"   \"復興里\"   \"自強里\"  \n [31] \"富裕里\"   \"龍山里\"   \"富強里\"   \"東聖里\"   \"裕農里\"   \"南聖里\"  \n [37] \"東光里\"   \"後甲里\"   \"莊敬里\"   \"公園里\"   \"大港里\"   \"正覺里\"  \n [43] \"大和里\"   \"成功里\"   \"同安里\"   \"南都里\"   \"南華里\"   \"建南里\"  \n [49] \"明興里\"   \"郡南里\"   \"明亮里\"   \"光明里\"   \"府南里\"   \"國宅里\"  \n [55] \"田寮里\"   \"新生里\"   \"再興里\"   \"彰南里\"   \"金華里\"   \"新興里\"  \n [61] \"文南里\"   \"新昌里\"   \"廣州里\"   \"溪頂里\"   \"海佃里\"   \"溪東里\"  \n [67] \"溪墘里\"   \"安富里\"   \"塩田里\"   \"鳳凰里\"   \"砂崙里\"   \"文平里\"  \n [73] \"華平里\"   \"建平里\"   \"幸福里\"   \"上崙里\"   \"仁德里\"   \"興農里\"  \n [79] \"新田里\"   \"一甲里\"   \"德高里\"   \"仁和里\"   \"西灣里\"   \"甲頂里\"  \n [85] \"永康里\"   \"三合里\"   \"復華里\"   \"二王里\"   \"西賢里\"   \"佃東里\"  \n [91] \"鹿耳里\"   \"海西里\"   \"佃西里\"   \"鹽埕里\"   \"北華里\"   \"華德里\"  \n [97] \"福德里\"   \"長興里\"   \"大興里\"   \"大光里\"   \"小北里\"   \"立人里\"  \n[103] \"小西門里\" \"五條港里\" \"南美里\"   \"北門里\"   \"塩洲里\"   \"重興里\"  \n[109] \"和順里\"   \"力行里\"   \"成德里\"   \"永華里\"   \"元美里\"   \"南廠里\"  \n[115] \"府前里\"   \"南門里\"   \"龍潭里\"   \"三民里\"   \"文元里\"   \"藥王里\"  \n[121] \"安西里\"   \"大安里\"   \"安和里\"   \"理想里\"   \"安慶里\"   \"梅花里\"  \n[127] \"頂安里\"   \"安順里\"   \"勝利里\"   \"建國里\"   \"六合里\"   \"淵西里\"  \n[133] \"長安里\"   \"中華里\"   \"中興里\"   \"西勢里\"   \"蔦松里\"   \"顯宮里\"  \n[139] \"州南里\"   \"南興里\"   \"海東里\"  \n\n\nSince there are 145 unique villages with p-value that are lower than 0.05, we would randomly select 3 of them to do a further analysis.\nLet’s take Sanhe Village 三合里, 大安里 Da’an Village and 安西里 Anxi Village as an example.\n\n\n\n\nsanhe_v &lt;- gistar_map %&gt;% \n  ungroup() %&gt;% \n  filter(VILLENG == \"Sanhe Vil.\") |&gt; \n  dplyr:: select(VILLENG, epi_week, gi_star)\n\n\nggplot(data = sanhe_v, \n       aes(x = epi_week, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\ndaan_v &lt;- gistar_map %&gt;% \n  ungroup() %&gt;% \n  filter(VILLENG == \"Da'an Vil.\") |&gt; \n  dplyr:: select(VILLENG, epi_week, gi_star)\n\n\nggplot(data = daan_v, \n       aes(x = epi_week, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\nanxi_v &lt;- gistar_map %&gt;% \n  ungroup() %&gt;% \n  filter(VILLENG == \"Anxi Vil.\") |&gt; \n  dplyr:: select(VILLENG, epi_week, gi_star)\n\n\nggplot(data = anxi_v, \n       aes(x = epi_week, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\ncombined_data &lt;- rbind(daan_v, sanhe_v, anxi_v)\n\n# Plot using ggplot\nggplot(combined_data, aes(x = epi_week, y = gi_star, color = VILLENG)) +\n  geom_line() +\n  labs(x = \"Epi Week\", y = \"GI Star\", color = \"Village Name\") +\n  ggtitle(\"GI Star Trend for Da'an Vil., Sanhe Vil. and AnXi Vil.\") +\n  theme_minimal()\n\n\n\n\n\ndaan_v %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 6\n     tau      sl     S     D  varS                                      geometry\n   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;                                 &lt;POLYGON [°]&gt;\n1 -0.463 0.00476   -88  190.   950 ((120.1954 23.03642, 120.1954 23.0364, 120.1…\n\n\n\nsanhe_v %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 6\n     tau       sl     S     D  varS                                     geometry\n   &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;                                &lt;POLYGON [°]&gt;\n1 -0.568 0.000517  -108  190.   950 ((120.2376 23.01428, 120.2375 23.01427, 120…\n\n\n\nanxi_v %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 6\n    tau    sl     S     D  varS                                         geometry\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;                                    &lt;POLYGON [°]&gt;\n1 0.126 0.456    24  190.   950 ((120.2123 23.03689, 120.212 23.03685, 120.2121…\n\n\n\nehsa &lt;- gistar_map %&gt;%\n  group_by(VILLENG) %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  tidyr::unnest_wider(mk)\n\n\nnrow(ehsa[ehsa$sl &lt; 0.05,])\n\n[1] 99\n\n\n\nnrow(ehsa[ehsa$sl &gt;= 0.05,])\n\n[1] 150\n\n\n\nehsa &lt;- emerging_hotspot_analysis(\n  x = tainan_st, \n  .var = \"total_cases\",\n  k = 1, \n  nsim = 99\n)\n\n\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\ntn_ehsa &lt;- tainan_v %&gt;%\n  left_join(ehsa,\n            by = join_by(VILLCODE == location))\n\n\nehsa_sig &lt;- tn_ehsa  %&gt;%\n  filter(p_value &lt; 0.05)\n\n\nehsa_map &lt;- tm_shape(tn_ehsa) +\n  tm_polygons(id = \"VILLENG\") +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n\ntmap_mode(\"view\")\nehsa_map"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#importing-geospatial-data",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#importing-geospatial-data",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "filtered_tainan_village &lt;- read_rds(\"data/rds/filtered_tainan_village.rds\")\n\n\n#print(filtered_tainan_village)\n\n\ntmap_mode(\"plot\")\ntm_shape(filtered_tainan_village) +\n  tm_borders()\n\n\n\n\n\ntmap_mode(\"view\")\ntm_shape(filtered_tainan_village) +\n  tm_fill(\"VILLNAME\", \n          alpha = 0.2) +\n  tm_borders()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#importing-data",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "#reduced-size sf data\ndengue_data &lt;- read_rds(\"data/rds/dengue_data.rds\")\n\n\n#joint data\ntainan_dengue &lt;- read_rds(\"data/rds/tainan_dengue.rds\")\n\n\n#geospatial data\ntainan_v &lt;- read_rds(\"data/rds/filtered_tainan_village.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#exploratory-data-analysis-eda",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#exploratory-data-analysis-eda",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "To have a better idea of how is the distributions of dengue cases in Tainan, we can do it by grouping the data into different groups.\n\nhead(dengue_data)\n\nSimple feature collection with 6 features and 10 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 120.218 ymin: 22.97608 xmax: 120.2465 ymax: 23.01932\nGeodetic CRS:  TWD97\n       ONSET_DAY CASE_CONFIRMATION_DAY GENDER AGE_GRP COUNTYNAME TOWNNAME\n81015 2023/07/30            2023/07/31     女   65-69     台南市     東區\n81016 2023/07/30            2023/07/31     男     70+     台南市     東區\n81017 2023/07/30            2023/07/31     女   50-54     台南市   永康區\n81018 2023/07/30            2023/07/31     女   15-19     台南市   永康區\n81019 2023/07/30            2023/07/31     女   15-19     台南市   永康區\n81020 2023/07/30            2023/08/02     男   50-54     台南市   永康區\n      VILLNAME INFECTED_COUNTRY CONFIRMED_CASE_COUNT epi_week\n81015     None         中華民國                    1       31\n81016     None         中華民國                    1       31\n81017     None         中華民國                    1       31\n81018     None         中華民國                    1       31\n81019     None         中華民國                    1       31\n81020     None         中華民國                    1       31\n                       geometry\n81015 POINT (120.2202 22.97608)\n81016  POINT (120.218 22.98007)\n81017 POINT (120.2354 23.01374)\n81018 POINT (120.2456 23.01932)\n81019 POINT (120.2465 23.01821)\n81020 POINT (120.2266 23.01695)\n\n\n\nhead(tainan_dengue)\n\nSimple feature collection with 6 features and 20 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0936 ymin: 22.9156 xmax: 120.2585 ymax: 23.08827\nGeodetic CRS:  TWD97\n       VILLCODE COUNTYNAME.x TOWNNAME.x VILLNAME.x      VILLENG COUNTYID\n1   67000350032       臺南市     安南區     青草里 Qingcao Vil.        D\n1.1 67000350032       臺南市     安南區     青草里 Qingcao Vil.        D\n2   67000270011       臺南市     仁德區     保安里  Bao'an Vil.        D\n2.1 67000270011       臺南市     仁德區     保安里  Bao'an Vil.        D\n2.2 67000270011       臺南市     仁德區     保安里  Bao'an Vil.        D\n2.3 67000270011       臺南市     仁德區     保安里  Bao'an Vil.        D\n    COUNTYCODE TOWNID TOWNCODE NOTE  ONSET_DAY CASE_CONFIRMATION_DAY GENDER\n1        67000    D06 67000350 &lt;NA&gt; 2023/09/14            2023/09/15     男\n1.1      67000    D06 67000350 &lt;NA&gt; 2023/10/12            2023/10/12     男\n2        67000    D32 67000270 &lt;NA&gt; 2023/08/04            2023/08/06     男\n2.1      67000    D32 67000270 &lt;NA&gt; 2023/09/10            2023/09/10     女\n2.2      67000    D32 67000270 &lt;NA&gt; 2023/09/11            2023/09/11     男\n2.3      67000    D32 67000270 &lt;NA&gt; 2023/09/16            2023/09/17     男\n    AGE_GRP COUNTYNAME.y TOWNNAME.y VILLNAME.y INFECTED_COUNTRY\n1     40-44       台南市     安南區       None         中華民國\n1.1   30-34       台南市       None       None         中華民國\n2     25-29       台南市     仁德區       None         中華民國\n2.1     70+       台南市     仁德區       None         中華民國\n2.2   25-29       台南市     仁德區       None         中華民國\n2.3   40-44       台南市     仁德區       None         中華民國\n    CONFIRMED_CASE_COUNT epi_week                       geometry\n1                      1       37 POLYGON ((120.1176 23.08387...\n1.1                    1       41 POLYGON ((120.1176 23.08387...\n2                      1       31 POLYGON ((120.2304 22.93544...\n2.1                    1       37 POLYGON ((120.2304 22.93544...\n2.2                    1       37 POLYGON ((120.2304 22.93544...\n2.3                    1       37 POLYGON ((120.2304 22.93544...\n\n\n\ntmap_mode(\"plot\")\ntown_map &lt;- tm_shape(tainan_dengue) +\n  tm_polygons(col = \"TOWNID\") +\n  tm_layout(legend.show = TRUE, main.title = \"Overview of Dengue Study Area\", main.title.size = 1) +\n  tm_scale_bar()\n\n\ntmap_mode(\"plot\")\nv_map &lt;- tm_shape(tainan_dengue) +\n  tm_polygons(col = \"VILLENG\") +\n  tm_layout(legend.show = TRUE, main.title = \"Overview of Dengue Study Area\", main.title.size = 1) +\n  tm_scale_bar()\n\n\ntmap_arrange(town_map,v_map, ncol=2)\n\n\n\n\n\nggplot(tainan_dengue, aes(x = TOWNID)) +\n  geom_bar(fill = \"steelblue\", color = \"black\", bins = 20) +\n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5)\n\n\n\n\n\n\nSince there is 1 NA values in the column: CONFIRMED_CASE_COUNT coloumn for D06, we need to mutate some of the rows\n\n# Check for NA values in CONFIRMED_CASE_COUNT column for D06\nsum(is.na(tainan_dengue$CONFIRMED_CASE_COUNT[tainan_dengue$TOWNID == \"D06\"]))\n\n[1] 1\n\n\n\ntainan_dengue_imputed &lt;- tainan_dengue %&gt;%\n  mutate(CONFIRMED_CASE_COUNT = ifelse(is.na(CONFIRMED_CASE_COUNT), 0, CONFIRMED_CASE_COUNT))\n\n\nwrite_rds(tainan_dengue_imputed, \"data/rds/tainan_dengue_2.rds\")\n\n\ntainan_dengue_2 &lt;- read_rds(\"data/rds/tainan_dengue_2.rds\")\n\n\ntown_data &lt;- tainan_dengue_2 %&gt;%\n  group_by(TOWNID) %&gt;%\n  summarise(total_cases = sum(CONFIRMED_CASE_COUNT))\n\n# Now you can print the summarized data again\nprint(town_data)\n\nSimple feature collection with 8 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 8 × 3\n  TOWNID total_cases                                                    geometry\n  &lt;chr&gt;        &lt;dbl&gt;                                               &lt;POLYGON [°]&gt;\n1 D01           4127 ((120.2371 22.96098, 120.2372 22.961, 120.2378 22.9611, 12…\n2 D02           2831 ((120.192 22.98817, 120.1908 22.98841, 120.1904 22.98849, …\n3 D04           2735 ((120.2176 23.02032, 120.2173 23.02013, 120.2172 23.01999,…\n4 D06           3211 ((120.2154 23.02506, 120.2155 23.02511, 120.216 23.02552, …\n5 D07            740 ((120.1652 23.00266, 120.1652 23.00267, 120.1652 23.00273,…\n6 D08           1506 ((120.2001 22.98145, 120.2009 22.98144, 120.2009 22.98144,…\n7 D32            596 ((120.2247 22.96165, 120.2246 22.96166, 120.2243 22.9617, …\n8 D39           3070 ((120.2347 22.99849, 120.2349 22.99848, 120.2355 22.99849,…\n\n\n\ntown_data_map &lt;- tm_shape(town_data) +\n  tm_borders() +\n  tm_fill(\"total_cases\") +\n   tm_layout(main.title = \"Total Confirmed Cases by Town\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE)+\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\nv_data &lt;- tainan_dengue_2 %&gt;%\n  group_by(VILLCODE) %&gt;%\n  summarise(total_cases = sum(CONFIRMED_CASE_COUNT))\n\n\nv_data_map &lt;- tm_shape(v_data) +\n  tm_borders() +\n  tm_fill(\"total_cases\") +\n   tm_layout(main.title = \"Total Confirmed Cases by Village\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE)+\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n\n\ntmap_arrange(town_data_map, v_data_map, nrow = 1)\n\n\n\n\n\n\n\n\nnew_vw_dengue &lt;- tainan_dengue %&gt;%\n  group_by(VILLCODE, epi_week) %&gt;% \n  summarise(total_cases = sum(CONFIRMED_CASE_COUNT))  %&gt;%\n  complete(epi_week = 31:50, fill = list(total_cases = 0)) %&gt;%\n  st_drop_geometry()\n\n\nvw_dengue &lt;- tainan_dengue_2 %&gt;%\n  group_by(VILLCODE, epi_week) %&gt;% \n  summarise(total_cases = sum(CONFIRMED_CASE_COUNT))  %&gt;%\n  complete(epi_week = 31:50, fill = list(total_cases = 0)) \n\n\nprint(vw_dengue)\n\n# A tibble: 5,161 × 4\n# Groups:   VILLCODE [258]\n   VILLCODE    epi_week total_cases                                     geometry\n   &lt;chr&gt;          &lt;dbl&gt;       &lt;dbl&gt;                                &lt;POLYGON [°]&gt;\n 1 67000270001       31           0                                        EMPTY\n 2 67000270001       32           0                                        EMPTY\n 3 67000270001       33           1 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 4 67000270001       34           1 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 5 67000270001       35           2 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 6 67000270001       36           2 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 7 67000270001       37           6 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 8 67000270001       38           3 ((120.2672 22.99655, 120.2668 22.99643, 120…\n 9 67000270001       39           4 ((120.2672 22.99655, 120.2668 22.99643, 120…\n10 67000270001       40           1 ((120.2672 22.99655, 120.2668 22.99643, 120…\n# ℹ 5,151 more rows\n\n\n\nvw_dengue &lt;- na.omit(vw_dengue) %&gt;%  st_drop_geometry()\n\n\n#vw_dengue_2 &lt;- vw_dengue %&gt;%\n  #left_join(tainan_v, by = \"VILLCODE\")%&gt;% \n  #dplyr:: select(1:3,14)%&gt;% \n  #drop_na()\n\n\nvw_dengue_3 &lt;- vw_dengue %&gt;%\n  dplyr:: select(-geometry)\n\n\nvw_dengue_3 &lt;- as_tibble(vw_dengue_3)\n\n\n#colSums(is.na(vw_dengue_2))\n\n\n#class(tainan_dengue_2$geometry)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#global-spatial-autocorrelation-analysis",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#global-spatial-autocorrelation-analysis",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "wm_q_v &lt;- poly2nb(v_data, \n                queen=TRUE)\nsummary(wm_q_v)\n\nNeighbour list object:\nNumber of regions: 258 \nNumber of nonzero links: 1526 \nPercentage nonzero weights: 2.29253 \nAverage number of links: 5.914729 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 10 11 12 14 \n 4 17 47 49 49 41 26 14  6  3  1  1 \n4 least connected regions:\n15 44 121 188 with 2 links\n1 most connected region:\n10 with 14 links\n\n\nIt shows that there are 258 villages in the selected Tainan Area. The most connected area has 14 links. All of the villages at least has 2 neighbors.\n\n\n\n\nrswm_q_v &lt;- nb2listw(wm_q_v, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q_v\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 258 \nNumber of nonzero links: 1526 \nPercentage nonzero weights: 2.29253 \nAverage number of links: 5.914729 \n\nWeights style: W \nWeights constants summary:\n    n    nn  S0       S1       S2\nW 258 66564 258 92.74568 1068.866\n\n\n\n\n\n\n\n\n\nmoran.test(v_data$total_cases, \n           listw=rswm_q_v, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  v_data$total_cases  \nweights: rswm_q_v    \n\nMoran I statistic standard deviate = 12.869, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.468370647      -0.003891051       0.001346741 \n\n\n\n#wm_q &lt;- v_data %&gt;% \n#  mutate(nb = st_contiguity(geometry),\n#         wt = st_weights(nb,\n#                       style = \"W\"),\n#         .before =1)\n\n\n\n\n\nset.seed(1234)\nbperm_v = moran.mc(v_data$total_cases, \n                listw=rswm_q_v, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm_v\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  v_data$total_cases \nweights: rswm_q_v  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.46837, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nmean(bperm_v$res[1:999])\n\n[1] -0.004564599\n\n\n\nvar(bperm_v$res[1:999])\n\n[1] 0.001301815\n\n\n\nsummary(bperm_v$res[1:999])\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.101986 -0.028318 -0.005984 -0.004565  0.018573  0.147076 \n\n\n\nhist(bperm_v$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\n\n\n\n\ngeary.test(v_data$total_cases, listw=rswm_q_v)\n\n\n    Geary C test under randomisation\n\ndata:  v_data$total_cases \nweights: rswm_q_v   \n\nGeary C statistic standard deviate = 11.324, p-value &lt; 2.2e-16\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.495321529       1.000000000       0.001986229 \n\n\n\n\n\n\nset.seed(1234)\nbperm_v_geary =geary.mc(v_data$total_cases, \n               listw=rswm_q_v, \n               nsim=999)\nbperm_v_geary\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  v_data$total_cases \nweights: rswm_q_v  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.49532, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nmean(bperm_v_geary$res[1:999])\n\n[1] 1.001509\n\n\n\nvar(bperm_v_geary$res[1:999])\n\n[1] 0.001898197\n\n\n\nsummary(bperm_v_geary$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.8487  0.9731  1.0015  1.0015  1.0299  1.1411 \n\n\n\nhist(bperm_v_geary$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#spatial-correlogram",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#spatial-correlogram",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "MI_corr &lt;- sp.correlogram(wm_q_v, \n                          v_data$total_cases, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for v_data$total_cases \nmethod: Moran's I\n           estimate expectation    variance standard deviate Pr(I) two sided\n1 (258)  0.46837065 -0.00389105  0.00134674          12.8689       &lt; 2.2e-16\n2 (258)  0.21643211 -0.00389105  0.00056699           9.2527       &lt; 2.2e-16\n3 (258)  0.02355845 -0.00389105  0.00035433           1.4582       0.1447735\n4 (258) -0.06193313 -0.00389105  0.00026371          -3.5742       0.0003513\n5 (258) -0.06036914 -0.00389105  0.00021601          -3.8428       0.0001216\n6 (258) -0.02404258 -0.00389105  0.00019723          -1.4349       0.1513203\n           \n1 (258) ***\n2 (258) ***\n3 (258)    \n4 (258) ***\n5 (258) ***\n6 (258)    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nGC_corr &lt;- sp.correlogram(wm_q_v, \n                          v_data$total_cases, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for v_data$total_cases \nmethod: Geary's C\n          estimate expectation   variance standard deviate Pr(I) two sided    \n1 (258) 0.49532153  1.00000000 0.00198623         -11.3240       &lt; 2.2e-16 ***\n2 (258) 0.75441466  1.00000000 0.00100805          -7.7350       1.034e-14 ***\n3 (258) 0.96502867  1.00000000 0.00081587          -1.2243         0.22082    \n4 (258) 1.05132466  1.00000000 0.00071208           1.9234         0.05443 .  \n5 (258) 1.03086531  1.00000000 0.00056427           1.2993         0.19382    \n6 (258) 0.98449841  1.00000000 0.00051277          -0.6846         0.49362    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#global-measure-of-spatial-autocorrelation",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#global-measure-of-spatial-autocorrelation",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "wm_q_v &lt;- v_data %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\n\nwm_q_v\n\nSimple feature collection with 258 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 258 × 5\n   nb         wt         VILLCODE    total_cases                        geometry\n * &lt;nb&gt;       &lt;list&gt;     &lt;chr&gt;             &lt;dbl&gt;                   &lt;POLYGON [°]&gt;\n 1 &lt;int [9]&gt;  &lt;dbl [9]&gt;  67000270001          37 ((120.2672 22.99655, 120.2668 …\n 2 &lt;int [3]&gt;  &lt;dbl [3]&gt;  67000270002          15 ((120.2659 22.99146, 120.2631 …\n 3 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270003          39 ((120.2492 22.98265, 120.2492 …\n 4 &lt;int [12]&gt; &lt;dbl [12]&gt; 67000270004         105 ((120.239 22.98012, 120.2389 2…\n 5 &lt;int [3]&gt;  &lt;dbl [3]&gt;  67000270005         163 ((120.2577 22.97432, 120.2572 …\n 6 &lt;int [4]&gt;  &lt;dbl [4]&gt;  67000270006          15 ((120.2713 22.96804, 120.2712 …\n 7 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270007          41 ((120.2404 22.95915, 120.2404 …\n 8 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270008          30 ((120.2701 22.94841, 120.2684 …\n 9 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270011          19 ((120.2304 22.93544, 120.2301 …\n10 &lt;int [14]&gt; &lt;dbl [14]&gt; 67000270012          62 ((120.2247 22.96165, 120.2247 …\n# ℹ 248 more rows\n\n\n\n\n\n\nmoranI_v &lt;- global_moran(wm_q_v$total_cases,\n                       wm_q_v$nb,\n                       wm_q_v$wt)\nglimpse(moranI_v)\n\nList of 2\n $ I: num 0.468\n $ K: num 5.64\n\n\n\n\n\n\nglobal_moran_test(wm_q_v$total_cases,\n                       wm_q_v$nb,\n                       wm_q_v$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 12.869, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.468370647      -0.003891051       0.001346741 \n\n\n\n\n\n\nset.seed(1234)\n\n\nglobal_moran_perm(wm_q_v$total_cases,\n                       wm_q_v$nb,\n                       wm_q_v$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.46837, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#local-measure-of-spatial-autocorrelation",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#local-measure-of-spatial-autocorrelation",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "Local Moran’s I analysis is used to detect localized clusters of high or low values in spatial data, providing insights into spatial heterogeneity and informing targeted interventions or policies. By complementing global measures of spatial autocorrelation, such as Moran’s I, it helps validate overall spatial patterns and visualizes spatial clusters for enhanced interpretation.\n\n\nThis is useful to detect clusters and outliers.\n\nlisa &lt;- wm_q_v %&gt;% \n  mutate(local_moran = local_moran(\n    total_cases, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\n\n\n\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of total_cases\",\n            main.title.size = 0.8)\n\n\n\n\n\ntmap_mode(\"plot\")\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\n\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii &lt; 0.05)\ntmap_mode(\"plot\")\nlisa_map &lt;- tm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)+ \n  tm_scale_bar() +\n  tm_layout(legend.show = TRUE, main.title = \"Overview of Outliers and Clusters\", main.title.size = 1)\n\nTo have a better understanding on clusters and outliers better, it is good to show the distribution of town in Tainan region.\n\ntmap_mode(\"plot\")\ntmap_arrange(lisa_map, town_map, ncol = 2)\n\n\n\n\nFrom the above visualization, the low-low clusters are mainly found in the northern and south-eastern part of the study area. While high-high clusters are mainly found surrounding central area, in D06, D01, D02, D39."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#hot-spot-and-cold-spot-area-analysis-hcsa",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#hot-spot-and-cold-spot-area-analysis-hcsa",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "wm_idw_v &lt;- v_data %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n\nHCSA_v &lt;- wm_idw_v %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    total_cases, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA_v\n\nSimple feature collection with 258 features and 14 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 258 × 15\n   gi_star cluster    e_gi    var_gi std_dev p_value p_sim p_folded_sim skewness\n     &lt;dbl&gt; &lt;fct&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n 1 -0.996  Low     0.00370   7.49e-7  -0.909 0.363    0.36         0.18   0.217 \n 2 -1.16   Low     0.00311   2.20e-6  -0.691 0.490    0.54         0.27   1.37  \n 3 -0.124  Low     0.00355   1.42e-6   0.139 0.889    0.86         0.43   0.622 \n 4  1.04   High    0.00403   5.46e-7   0.979 0.328    0.32         0.16   0.133 \n 5  0.260  High    0.00522   1.73e-6  -0.716 0.474    0.5          0.25   0.365 \n 6 -0.0819 Low     0.00325   1.55e-6   0.409 0.683    0.56         0.28   0.950 \n 7 -1.24   Low     0.00361   1.39e-6  -1.10  0.269    0.26         0.13   0.392 \n 8 -2.19   Low     0.00343   1.38e-6  -1.97  0.0488   0.02         0.01   0.755 \n 9 -2.05   Low     0.00339   1.32e-6  -1.83  0.0677   0.06         0.03   0.406 \n10 -2.37   Low     0.00370   4.03e-7  -2.64  0.00823  0.02         0.01   0.0995\n# ℹ 248 more rows\n# ℹ 6 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, VILLCODE &lt;chr&gt;,\n#   total_cases &lt;dbl&gt;, geometry &lt;POLYGON [°]&gt;\n\n\n\n\n\n\ntmap_mode(\"plot\")\nmap_1 &lt;- tm_shape(HCSA_v) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))+ \n  tm_layout(legend.show = TRUE, main.title = \"Gi* of study area\", main.title.size = 1)\n\n\n\n\n\ntmap_mode(\"plot\")\nmap_2 &lt;- tm_shape(HCSA_v) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)+ \n  tm_layout(legend.show = TRUE, main.title = \"p-value of HSCA\", main.title.size = 1)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(map_1, map_2, ncol = 2)\n\n\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA_v  %&gt;%\n  filter(p_sim &lt; 0.05)\n\ntmap_mode(\"plot\")\nHSCA_map &lt;- tm_shape(HCSA_v) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)+ \n  tm_scale_bar()+\n  tm_layout(legend.show = TRUE, main.title = \"Hot spot & Cold spot areas\", main.title.size = 1)\n\n\ntmap_mode(\"plot\")\ntmap_arrange(HSCA_map, v_map, ncol = 2)\n\n\n\n\n\n\n\n\nglimpse(vw_dengue)\n\nRows: 5,160\nColumns: 4\nGroups: VILLCODE [258]\n$ VILLCODE    &lt;chr&gt; \"67000270001\", \"67000270001\", \"67000270001\", \"67000270001\"…\n$ epi_week    &lt;dbl&gt; 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45…\n$ total_cases &lt;dbl&gt; 0, 0, 1, 1, 2, 2, 6, 3, 4, 1, 1, 2, 4, 5, 1, 1, 3, 0, 0, 0…\n$ geometry    &lt;POLYGON [°]&gt; POLYGON EMPTY, POLYGON EMPTY, POLYGON ((120.2672 2…\n\n\n\ntainan_st &lt;- spacetime(vw_dengue_3, tainan_v, \n                   .loc_col = \"VILLCODE\",\n                   .time_col = \"epi_week\",\n                   active = \"data\")\n\n\nis_spacetime_cube(tainan_st)\n\n[1] TRUE\n\n\n\n\n\n\ntainan_nb &lt;- tainan_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %&gt;%\n    set_nbs(\"nb\") %&gt;%\n    set_wts(\"wt\")\n\n\nglimpse(tainan_st)\n\nRows: 5,160\nColumns: 3\n$ VILLCODE    &lt;chr&gt; \"67000270001\", \"67000270001\", \"67000270001\", \"67000270001\"…\n$ epi_week    &lt;dbl&gt; 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45…\n$ total_cases &lt;dbl&gt; 0, 0, 1, 1, 2, 2, 6, 3, 4, 1, 1, 2, 4, 5, 1, 1, 3, 0, 0, 0…\n\n\n\nhead(tainan_nb)\n\n# A tibble: 6 × 5\n  VILLCODE    epi_week total_cases nb        wt       \n  &lt;chr&gt;          &lt;dbl&gt;       &lt;dbl&gt; &lt;list&gt;    &lt;list&gt;   \n1 67000350032       31           0 &lt;int [4]&gt; &lt;dbl [4]&gt;\n2 67000270011       31           1 &lt;int [6]&gt; &lt;dbl [6]&gt;\n3 67000370005       31           0 &lt;int [9]&gt; &lt;dbl [9]&gt;\n4 67000330004       31           0 &lt;int [7]&gt; &lt;dbl [7]&gt;\n5 67000350028       31           0 &lt;int [5]&gt; &lt;dbl [5]&gt;\n6 67000350030       31           0 &lt;int [8]&gt; &lt;dbl [8]&gt;\n\n\n\n\n\n\ngi_stars &lt;- tainan_nb %&gt;% \n  group_by(epi_week) %&gt;% \n  mutate(gi_star = local_gstar_perm(total_cases, nb, wt)) %&gt;% \n  tidyr::unnest(gi_star)\n\n\ngistar_map &lt;- left_join(tainan_v, gi_stars,\n                          by = c(\"VILLCODE\" = \"VILLCODE\"))\n\n\nhead(gistar_map)\n\nSimple feature collection with 6 features and 24 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0936 ymin: 23.05871 xmax: 120.1185 ymax: 23.08827\nGeodetic CRS:  TWD97\n     VILLCODE COUNTYNAME TOWNNAME VILLNAME      VILLENG COUNTYID COUNTYCODE\n1 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n2 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n3 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n4 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n5 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n6 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n  TOWNID TOWNCODE NOTE epi_week total_cases             nb\n1    D06 67000350 &lt;NA&gt;       31           0 1, 6, 118, 160\n2    D06 67000350 &lt;NA&gt;       32           0 1, 6, 118, 160\n3    D06 67000350 &lt;NA&gt;       33           0 1, 6, 118, 160\n4    D06 67000350 &lt;NA&gt;       34           0 1, 6, 118, 160\n5    D06 67000350 &lt;NA&gt;       35           0 1, 6, 118, 160\n6    D06 67000350 &lt;NA&gt;       36           0 1, 6, 118, 160\n                                          wt    gi_star cluster        e_gi\n1 0.0000000, 0.3730707, 0.5166453, 0.3002859 -0.8151163     Low 0.002169319\n2 0.0000000, 0.3730707, 0.5166453, 0.3002859 -1.0671266     Low 0.002144715\n3 0.0000000, 0.3730707, 0.5166453, 0.3002859 -1.0377590     Low 0.002451856\n4 0.0000000, 0.3730707, 0.5166453, 0.3002859 -1.2677099     Low 0.002383876\n5 0.0000000, 0.3730707, 0.5166453, 0.3002859 -1.6374908     Low 0.002386591\n6 0.0000000, 0.3730707, 0.5166453, 0.3002859 -1.6756230     Low 0.002347521\n        var_gi    std_dev   p_value p_sim p_folded_sim skewness  kurtosis\n1 9.990736e-06 -0.6863169 0.4925133 0.304        0.002 3.621622 20.632237\n2 6.494679e-06 -0.8415710 0.4000282 0.160        0.002 2.574007 10.631890\n3 7.814990e-06 -0.7155669 0.4742588 0.368        0.114 2.089142  5.245152\n4 6.022745e-06 -0.9713739 0.3313621 0.032        0.002 2.377214  7.127481\n5 4.108333e-06 -1.1774575 0.2390130 0.012        0.002 1.919706  5.515143\n6 2.810493e-06 -1.2079759 0.2270565 0.052        0.022 1.769926  4.977910\n                        geometry\n1 POLYGON ((120.1176 23.08387...\n2 POLYGON ((120.1176 23.08387...\n3 POLYGON ((120.1176 23.08387...\n4 POLYGON ((120.1176 23.08387...\n5 POLYGON ((120.1176 23.08387...\n6 POLYGON ((120.1176 23.08387...\n\n\n\ntmap_mode(\"plot\")\ntm &lt;- tm_shape(gistar_map) +\n    tm_polygons(col = \"p_value\", palette = \"RdYlBu\", style = \"cont\", legend.show = TRUE) +\n    tm_layout(legend.position = c(\"right\", \"bottom\"))\n\ntm\n\n\n\n\nFrom the above map, the darker the red color, indicating them having a lower p-values. We can interpret that those villages are more likely to be significantly associated with higher or lower dengue cases compared to their neighbors. Let’s find out more by filtering out those villages with less than 0.05 p-value.\n\ngistar_map_pvalue &lt;- subset(gistar_map, p_value &lt;= 0.05)\n\n\nunique_villnames &lt;- unique(gistar_map_pvalue$VILLNAME)\ntotal_unique_villnames &lt;- length(unique_villnames)\n\n# Print the total number of unique VILLNAME values\nprint(length(unique(gistar_map_pvalue$VILLNAME)))\n\n[1] 141\n\nprint(unique(gistar_map_pvalue$VILLNAME))\n\n  [1] \"赤嵌里\"   \"大成里\"   \"城北里\"   \"城南里\"   \"法華里\"   \"國安里\"  \n  [7] \"城中里\"   \"城東里\"   \"南灣里\"   \"五王里\"   \"安康里\"   \"西橋里\"  \n [13] \"網寮里\"   \"大橋里\"   \"東橋里\"   \"王行里\"   \"大智里\"   \"崇成里\"  \n [19] \"崇明里\"   \"崇德里\"   \"崇學里\"   \"和平里\"   \"崇善里\"   \"路東里\"  \n [25] \"虎尾里\"   \"忠孝里\"   \"崇信里\"   \"德光里\"   \"復興里\"   \"自強里\"  \n [31] \"富裕里\"   \"龍山里\"   \"富強里\"   \"東聖里\"   \"裕農里\"   \"南聖里\"  \n [37] \"東光里\"   \"後甲里\"   \"莊敬里\"   \"公園里\"   \"大港里\"   \"正覺里\"  \n [43] \"大和里\"   \"成功里\"   \"同安里\"   \"南都里\"   \"南華里\"   \"建南里\"  \n [49] \"明興里\"   \"郡南里\"   \"明亮里\"   \"光明里\"   \"府南里\"   \"國宅里\"  \n [55] \"田寮里\"   \"新生里\"   \"再興里\"   \"彰南里\"   \"金華里\"   \"新興里\"  \n [61] \"文南里\"   \"新昌里\"   \"廣州里\"   \"溪頂里\"   \"海佃里\"   \"溪東里\"  \n [67] \"溪墘里\"   \"安富里\"   \"塩田里\"   \"鳳凰里\"   \"砂崙里\"   \"文平里\"  \n [73] \"華平里\"   \"建平里\"   \"幸福里\"   \"上崙里\"   \"仁德里\"   \"興農里\"  \n [79] \"新田里\"   \"一甲里\"   \"德高里\"   \"仁和里\"   \"西灣里\"   \"甲頂里\"  \n [85] \"永康里\"   \"三合里\"   \"復華里\"   \"二王里\"   \"西賢里\"   \"佃東里\"  \n [91] \"鹿耳里\"   \"海西里\"   \"佃西里\"   \"鹽埕里\"   \"北華里\"   \"華德里\"  \n [97] \"福德里\"   \"長興里\"   \"大興里\"   \"大光里\"   \"小北里\"   \"立人里\"  \n[103] \"小西門里\" \"五條港里\" \"南美里\"   \"北門里\"   \"塩洲里\"   \"重興里\"  \n[109] \"和順里\"   \"力行里\"   \"成德里\"   \"永華里\"   \"元美里\"   \"南廠里\"  \n[115] \"府前里\"   \"南門里\"   \"龍潭里\"   \"三民里\"   \"文元里\"   \"藥王里\"  \n[121] \"安西里\"   \"大安里\"   \"安和里\"   \"理想里\"   \"安慶里\"   \"梅花里\"  \n[127] \"頂安里\"   \"安順里\"   \"勝利里\"   \"建國里\"   \"六合里\"   \"淵西里\"  \n[133] \"長安里\"   \"中華里\"   \"中興里\"   \"西勢里\"   \"蔦松里\"   \"顯宮里\"  \n[139] \"州南里\"   \"南興里\"   \"海東里\"  \n\n\nSince there are 145 unique villages with p-value that are lower than 0.05, we would randomly select 3 of them to do a further analysis.\nLet’s take Sanhe Village 三合里, 大安里 Da’an Village and 安西里 Anxi Village as an example.\n\n\n\n\nsanhe_v &lt;- gistar_map %&gt;% \n  ungroup() %&gt;% \n  filter(VILLENG == \"Sanhe Vil.\") |&gt; \n  dplyr:: select(VILLENG, epi_week, gi_star)\n\n\nggplot(data = sanhe_v, \n       aes(x = epi_week, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\ndaan_v &lt;- gistar_map %&gt;% \n  ungroup() %&gt;% \n  filter(VILLENG == \"Da'an Vil.\") |&gt; \n  dplyr:: select(VILLENG, epi_week, gi_star)\n\n\nggplot(data = daan_v, \n       aes(x = epi_week, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\nanxi_v &lt;- gistar_map %&gt;% \n  ungroup() %&gt;% \n  filter(VILLENG == \"Anxi Vil.\") |&gt; \n  dplyr:: select(VILLENG, epi_week, gi_star)\n\n\nggplot(data = anxi_v, \n       aes(x = epi_week, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\ncombined_data &lt;- rbind(daan_v, sanhe_v, anxi_v)\n\n# Plot using ggplot\nggplot(combined_data, aes(x = epi_week, y = gi_star, color = VILLENG)) +\n  geom_line() +\n  labs(x = \"Epi Week\", y = \"GI Star\", color = \"Village Name\") +\n  ggtitle(\"GI Star Trend for Da'an Vil., Sanhe Vil. and AnXi Vil.\") +\n  theme_minimal()\n\n\n\n\n\ndaan_v %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 6\n     tau      sl     S     D  varS                                      geometry\n   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;                                 &lt;POLYGON [°]&gt;\n1 -0.463 0.00476   -88  190.   950 ((120.1954 23.03642, 120.1954 23.0364, 120.1…\n\n\n\nsanhe_v %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 6\n     tau       sl     S     D  varS                                     geometry\n   &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;                                &lt;POLYGON [°]&gt;\n1 -0.568 0.000517  -108  190.   950 ((120.2376 23.01428, 120.2375 23.01427, 120…\n\n\n\nanxi_v %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 6\n    tau    sl     S     D  varS                                         geometry\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;                                    &lt;POLYGON [°]&gt;\n1 0.126 0.456    24  190.   950 ((120.2123 23.03689, 120.212 23.03685, 120.2121…\n\n\n\nehsa &lt;- gistar_map %&gt;%\n  group_by(VILLENG) %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  tidyr::unnest_wider(mk)\n\n\nnrow(ehsa[ehsa$sl &lt; 0.05,])\n\n[1] 99\n\n\n\nnrow(ehsa[ehsa$sl &gt;= 0.05,])\n\n[1] 150\n\n\n\nehsa &lt;- emerging_hotspot_analysis(\n  x = tainan_st, \n  .var = \"total_cases\",\n  k = 1, \n  nsim = 99\n)\n\n\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\ntn_ehsa &lt;- tainan_v %&gt;%\n  left_join(ehsa,\n            by = join_by(VILLCODE == location))\n\n\nehsa_sig &lt;- tn_ehsa  %&gt;%\n  filter(p_value &lt; 0.05)\n\n\nehsa_map &lt;- tm_shape(tn_ehsa) +\n  tm_polygons(id = \"VILLENG\") +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n\ntmap_mode(\"view\")\nehsa_map"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/others.html",
    "href": "Take-home_Ex/Take-home_Ex2/others.html",
    "title": "demo",
    "section": "",
    "text": "ymr wm_q_v &lt;- poly2nb(v_data,                  queen=TRUE) summary(wm_q_v)}\nIt shows that there are 258 villages in the selected Tainan Area. The most connected area has 14 links. All of the villages at least has 2 neighbors.\n\n\n\nymr rswm_q_v &lt;- nb2listw(wm_q_v,                     style=\"W\",                     zero.policy = TRUE) rswm_q_v}\n\n\n\n\n\n\nymr moran.test(v_data$total_cases,             listw=rswm_q_v,             zero.policy = TRUE,             na.action=na.omit)}\nAs the p-value is very low, which is statistically significant. We can reject the null hypothesis that there is significant spatial autocorrelation in the data.\n\n\n\nymr set.seed(1234) bperm_v = moran.mc(v_data$total_cases,                  listw=rswm_q_v,                  nsim=999,                  zero.policy = TRUE,                  na.action=na.omit) bperm_v}\nAs the p-value is very low, which is statistically significant. We can reject the null hypothesis that there is significant spatial autocorrelation in the data.\n\n\n\n\n\n\nymr hist(bperm_v$res,       freq=TRUE,       breaks=20,       xlab=\"Simulated Moran's I\") abline(v=0,         col=\"red\")}\n\n\n\n\n\n\nymr geary.test(v_data$total_cases, listw=rswm_q_v)}\n\n\n\nymr set.seed(1234) bperm_v_geary =geary.mc(v_data$total_cases,                 listw=rswm_q_v,                 nsim=999) bperm_v_geary}\nAs the p-value is very low, which is statistically significant. We can reject the null hypothesis that there is significant spatial autocorrelation in the data.\n\n\n\n\n\n\nymr hist(bperm_v_geary$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\") abline(v=1, col=\"red\")}"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/others.html#global-spatial-autocorrelation-analysis",
    "href": "Take-home_Ex/Take-home_Ex2/others.html#global-spatial-autocorrelation-analysis",
    "title": "demo",
    "section": "",
    "text": "ymr wm_q_v &lt;- poly2nb(v_data,                  queen=TRUE) summary(wm_q_v)}\nIt shows that there are 258 villages in the selected Tainan Area. The most connected area has 14 links. All of the villages at least has 2 neighbors.\n\n\n\nymr rswm_q_v &lt;- nb2listw(wm_q_v,                     style=\"W\",                     zero.policy = TRUE) rswm_q_v}\n\n\n\n\n\n\nymr moran.test(v_data$total_cases,             listw=rswm_q_v,             zero.policy = TRUE,             na.action=na.omit)}\nAs the p-value is very low, which is statistically significant. We can reject the null hypothesis that there is significant spatial autocorrelation in the data.\n\n\n\nymr set.seed(1234) bperm_v = moran.mc(v_data$total_cases,                  listw=rswm_q_v,                  nsim=999,                  zero.policy = TRUE,                  na.action=na.omit) bperm_v}\nAs the p-value is very low, which is statistically significant. We can reject the null hypothesis that there is significant spatial autocorrelation in the data.\n\n\n\n\n\n\nymr hist(bperm_v$res,       freq=TRUE,       breaks=20,       xlab=\"Simulated Moran's I\") abline(v=0,         col=\"red\")}\n\n\n\n\n\n\nymr geary.test(v_data$total_cases, listw=rswm_q_v)}\n\n\n\nymr set.seed(1234) bperm_v_geary =geary.mc(v_data$total_cases,                 listw=rswm_q_v,                 nsim=999) bperm_v_geary}\nAs the p-value is very low, which is statistically significant. We can reject the null hypothesis that there is significant spatial autocorrelation in the data.\n\n\n\n\n\n\nymr hist(bperm_v_geary$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\") abline(v=1, col=\"red\")}"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/others.html#spatial-correlogram",
    "href": "Take-home_Ex/Take-home_Ex2/others.html#spatial-correlogram",
    "title": "demo",
    "section": "Spatial Correlogram",
    "text": "Spatial Correlogram\n\nCompute Moran’s I correlogram\nymr MI_corr &lt;- sp.correlogram(wm_q_v,                            v_data$total_cases,                            order=6,                            method=\"I\",                            style=\"W\") plot(MI_corr)}\n\n\n\nCompute Geary’s C correlogram and plot\nymr GC_corr &lt;- sp.correlogram(wm_q_v,                            v_data$total_cases,                            order=6,                            method=\"C\",                            style=\"W\") plot(GC_corr)}"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#in-depth-analysis",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#in-depth-analysis",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "To look into more in-depth of the data, we can scope into the villages where they are hot spot area."
  }
]